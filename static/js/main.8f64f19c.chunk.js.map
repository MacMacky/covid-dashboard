{"version":3,"sources":["helpers/countries.ts","helpers/index.ts","components/LabelWithIcon.tsx","helpers/config.ts","containers/PaperContainer.tsx","theme/index.ts","helpers/contexts.ts","helpers/hooks.ts","pages/Main.tsx","pages/About.tsx","components/Toast.tsx","pages/Countries/CountriesHeadTableCell.tsx","pages/Countries/CountriesTableHead.tsx","components/ImageFlag.tsx","pages/Countries/CountriesTableRow.tsx","pages/Countries/CountriesTableBody.tsx","components/CountriesLoadingRow.tsx","helpers/reducers/world.ts","pages/Countries/index.tsx","components/ButtonLink.tsx","components/Navbar.tsx","components/CountryToolTip.tsx","components/CountryToolTipTwo.tsx","components/DataBarChart.tsx","components/DataAreaChart.tsx","components/DataLineChart.tsx","components/renderChart.tsx","pages/Country.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","abbr","code","suggested","all","data","Promise","capitalize","str","toUpperCase","slice","ModifyResponseCallback","responses","reduce","acc","current","country","countries","find","o","formatNumber","x","toLocaleString","sortCallback","oldData","options","sort","type","sortBy","orderBy","a","b","localeCompare","sortComparison","filterCallback","searchTerm","filter","d","Number","isNaN","toLowerCase","includes","Object","keys","some","key","toString","getDifferences","countryData","rest","result","confirmed","deaths","recovered","i","len","length","k1","k2","k3","cur","prev","date","Date","split","diff_confirmed","diff_deaths","diff_recovered","push","LabelWithIcon","Icon","iconSize","color","label","value","loading","Grid","item","md","xs","sm","lg","container","justify","style","fontSize","fill","Typography","children","variant","marginLeft","gutterBottom","component","align","Skeleton","MAIN_API","PaperContainer","height","styles","makeStyles","root","margin","width","padding","paperContainerStyles","Paper","elevation","className","createTheme","responsiveFontSizes","createMuiTheme","palette","primary","main","colors","blue","dark","error","red","secondary","grey","theme","ThemeContext","createContext","setTheme","SortContext","sortData","sortOptions","ToastContext","toastProps","open","message","toggleToast","useChangeDocumentTitle","location","useLocation","useEffect","process","pathname","document","title","test","state","pop","useFetch","urls","modifyResponseCallback","defaultResponseValue","useState","setLoading","response","setResponse","setError","requests","fetch","map","url","then","res","json","results","catch","e","finally","useToastCallback","useContext","Main","dateAndTime","setDateAndTime","interval","setInterval","clearInterval","marginBottom","Language","brown","green","Healing","cases","yellow","PeopleAlt","PersonAddDisabled","active","orange","GroupAdd","critical","Report","todayCases","listStyles","backgroundColor","background","paper","maxWidth","About","query","pages","extract","List","aria-label","t","ListItem","button","ListItemText","Toast","duration","Snackbar","TransitionComponent","Slide","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","_","reason","Alert","severity","CountriesHeadTableCell","callback","TableCell","IconButton","onClick","display","CountriesTableHead","opts","TableHead","TableRow","ImageFlag","withBorder","src","alt","borderRadius","border","CountriesTableRow","memo","history","hover","cursor","_country","join","CountriesTableBody","useHistory","TableBody","TableSkeletonCell","CountriesLoadingRow","rows","Array","initialState","filteredAndSortedCases","payload","order","Countries","useReducer","reducer","dispatch","timeout","setTimeout","clearTimeout","useCallback","handleSearchChange","target","Provider","TextField","onChange","TableContainer","Table","ButtonLink","to","Button","Link","Navbar","themeStyles","setThemeStyles","setType","flexGrow","AppBar","position","Toolbar","newType","CountryToolTip","dataKey","p","textAlign","CountryToolTipTwo","cKey","cVal","cfColor","stroke","cColor","dKey","dVal","ddColor","dColor","rKey","rVal","rrColor","rColor","DataBarChart","dataKeys","bars","isMultiple","isArray","chartColors","strokeDasharray","content","verticalAlign","DataAreaChart","areas","gradients","fillOpacity","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","DataLineChart","lines","renderChart","chartType","Country","chart","setChart","FormControl","minWidth","InputLabel","Select","labelId","MenuItem","App","props","ThemeProvider","path","exact","Boolean","window","hostname","match","CovidApp","currentTheme","setToastProps","StrictMode","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"+RAAe,GACb,CAAEA,KAAM,cAAeC,KAAM,KAAMC,KAAM,MACzC,CAAEF,KAAM,iBAAkBC,KAAM,KAAMC,KAAM,OAC5C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,iBAAkBC,KAAM,KAAMC,KAAM,SAC5C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,SACtC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,sBAAuBC,KAAM,KAAMC,KAAM,SACjD,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,MACvC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,KAAMC,WAAW,GACxD,CAAEH,KAAM,UAAWC,KAAM,KAAMC,KAAM,MACrC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,SACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,SACtC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,MACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,SACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,yBAA0BC,KAAM,KAAMC,KAAM,OACpD,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,gBAAiBC,KAAM,KAAMC,KAAM,MAC3C,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,MACpC,CAEEF,KAAM,iCACNC,KAAM,KACNC,KAAM,OAER,CAAEF,KAAM,yBAA0BC,KAAM,KAAMC,KAAM,SACpD,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,IAAKC,WAAW,GACpD,CAAEH,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,iBAAkBC,KAAM,KAAMC,KAAM,SAC5C,CAAEF,KAAM,MAAOC,KAAM,KAAMC,KAAM,OACjC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,MACnC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,MACnC,CAAEF,KAAM,mBAAoBC,KAAM,KAAMC,KAAM,MAC9C,CAAEF,KAAM,0BAA2BC,KAAM,KAAMC,KAAM,MACrD,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,MACtC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CACEF,KAAM,MACNC,KAAM,KACNC,KAAM,OAER,CACEF,KAAM,QACNC,KAAM,KACNC,KAAM,OAER,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,MAClC,CAAEF,KAAM,aAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,MACrC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,SACtC,CAAEF,KAAM,qBAAsBC,KAAM,KAAMC,KAAM,SAChD,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,MACnC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,oBAAqBC,KAAM,KAAMC,KAAM,OAC/C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,mBAAoBC,KAAM,KAAMC,KAAM,OAC9C,CAAEF,KAAM,iBAAkBC,KAAM,KAAMC,KAAM,OAC5C,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,KAAMC,WAAW,GACrD,CAAEH,KAAM,gBAAiBC,KAAM,KAAMC,KAAM,OAC3C,CAAEF,KAAM,mBAAoBC,KAAM,KAAMC,KAAM,OAC9C,CAAEF,KAAM,8BAA+BC,KAAM,KAAMC,KAAM,OACzD,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,KAAMC,WAAW,GACtD,CAAEH,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,MACpC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,SACrC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,SAClC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,MACtC,CAAEF,KAAM,gBAAiBC,KAAM,KAAMC,KAAM,OAC3C,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAEEF,KAAM,oCACNC,KAAM,KACNC,KAAM,OAER,CAEEF,KAAM,eACNC,KAAM,KACNC,KAAM,OAER,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,MACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,MACnC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,MACvC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,MAClC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,MACzC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,MACnC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,SACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,KAAMC,WAAW,GACpD,CAAEH,KAAM,SAAUC,KAAM,KAAMC,KAAM,MACpC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,KACxC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAEEF,KAAM,yCACNC,KAAM,KACNC,KAAM,OAER,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,MACtC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAEEF,KAAM,OACNC,KAAM,KACNC,KAAM,OAER,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,gBAAiBC,KAAM,KAAMC,KAAM,OAC3C,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAEEF,KAAM,kBACNC,KAAM,KACNC,KAAM,OAER,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,MACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,mBAAoBC,KAAM,KAAMC,KAAM,OAC9C,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,MACpC,CACEF,KAAM,kCACNC,KAAM,KACNC,KAAM,OAER,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,SACxC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,MACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,MACzC,CAAEF,KAAM,gBAAiBC,KAAM,KAAMC,KAAM,OAC3C,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,MACzC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,iBAAkBC,KAAM,KAAMC,KAAM,OAC5C,CAAEF,KAAM,2BAA4BC,KAAM,KAAMC,KAAM,SACtD,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,MACpC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,MACtC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,mBAAoBC,KAAM,KAAMC,KAAM,OAC9C,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,MAClC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,MACzC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,MACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,KACzC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,aAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,MACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,KACpC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,OACvC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,wBAAyBC,KAAM,KAAMC,KAAM,SACnD,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,SACzC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,wBAAyBC,KAAM,KAAMC,KAAM,OACnD,CACEF,KAAM,yBACNC,KAAM,KACNC,KAAM,SAER,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,wBAAyBC,KAAM,KAAMC,KAAM,OACnD,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,MACvC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,SAC1C,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,kBAAmBC,KAAM,KAAMC,KAAM,OAC7C,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,MAC1C,CAEEF,KAAM,+CACNC,KAAM,KACNC,KAAM,OAER,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,MACnC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,MACvC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,yBAA0BC,KAAM,KAAMC,KAAM,MACpD,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,MACpC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,MACzC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,MACtC,CAAEF,KAAM,cAAeC,KAAM,KAAMC,KAAM,OACzC,CAAEF,KAAM,OAAQC,KAAM,KAAMC,KAAM,OAClC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,sBAAuBC,KAAM,KAAMC,KAAM,SACjD,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,MACpC,CAAEF,KAAM,eAAgBC,KAAM,KAAMC,KAAM,OAC1C,CAAEF,KAAM,mBAAoBC,KAAM,KAAMC,KAAM,SAC9C,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,MAAOC,KAAM,KAAMC,KAAM,OACjC,CAAEF,KAAM,KAAMC,KAAM,KAAMC,KAAM,MAChC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,OACtC,CAAEF,KAAM,MAAOC,KAAM,KAAMC,KAAM,IAAKC,WAAW,GACjD,CAAEH,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,oBAAqBC,KAAM,KAAMC,KAAM,SAC/C,CAAEF,KAAM,aAAcC,KAAM,KAAMC,KAAM,OACxC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,OACrC,CAAEF,KAAM,YAAaC,KAAM,KAAMC,KAAM,MACvC,CAAEF,KAAM,UAAWC,KAAM,KAAMC,KAAM,MACrC,CAAEF,KAAM,oBAAqBC,KAAM,KAAMC,KAAM,OAC/C,CAAEF,KAAM,iBAAkBC,KAAM,KAAMC,KAAM,OAC5C,CAAEF,KAAM,QAASC,KAAM,KAAMC,KAAM,OACnC,CAAEF,KAAM,SAAUC,KAAM,KAAMC,KAAM,OACpC,CAAEF,KAAM,WAAYC,KAAM,KAAMC,KAAM,QCtSlCE,EAAM,SAACC,GACX,OAAOC,QAAQF,IAAIC,IAGfE,EAAa,SAACC,GAClB,OAAKA,EACEA,EAAI,GAAGC,cAAgBD,EAAIE,MAAM,GADvB,IAGbC,EAA2C,SAACC,GAShD,OAReA,EAAU,GAAGF,MAAM,GAAGG,QAAO,SAACC,EAAgBC,GAC3D,IAAMC,EAAUC,EAAUC,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,OAASe,EAAQC,WACvD,MACQ,GAAN,mBAAWF,GADTE,EACF,4BAAqBD,GAArB,IAA8Bb,KAAMc,EAAQf,QAE5C,4BAAqBc,GAArB,IAA8Bb,KAAM,WAErC,KAICkB,EAAe,SAACC,GACpB,OAAKA,EACEA,EAAEC,iBADM,IAqBXC,EAAe,SAACC,EAAoBC,GAArB,OACnBD,EAAQd,QAAQgB,KAjBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,QAAjB,OAA2C,SAACC,EAAQC,GACzE,MAAa,WAATJ,EACc,QAAZE,EACKC,EAAEF,GAAQI,cAAcD,EAAEH,IAE1BG,EAAEH,GAAQI,cAAcF,EAAEF,IAGnB,QAAZC,EACKC,EAAEF,GAAUG,EAAEH,GAEdG,EAAEH,GAAUE,EAAEF,IAMJK,CAAeR,KAGhCS,EAAiB,SAACC,EAAoC9B,GAC1D,OAAKA,EACEA,EAAK+B,QAAO,SAAAC,GACjB,OAAIC,OAAOC,MAAMD,OAAOH,IACfE,EAAErB,QAAQwB,cAAcC,SAAUN,EAAsBK,eAExDE,OAAOC,KAAKN,GAAGO,MAAK,SAACC,GAAD,uBAAcR,EAAEQ,UAAhB,aAAc,EAAyBC,WAAWL,SAASN,SALxE,IAWdY,EAAiB,SAACC,EAAoBC,GAQ1C,IAPA,IAAMC,EAAsB,CAC1B9C,IAAK,GACL+C,UAAW,GACXC,OAAQ,GACRC,UAAW,IAGJC,EAAI,EAAGC,EAAMP,EAAYQ,OAAzB,EAAmDd,OAAOC,KAAKK,EAAYM,IAA3E,mBAAqCG,GAArC,WAAyCC,EAAzC,KAA6CC,EAA7C,KAAgFL,EAAIC,EAAKD,IAAK,CAAC,IAAD,QAC/FM,EAAMZ,EAAYM,GAClBO,EAAOb,EAAYM,EAAI,GACvBQ,EAAO,IAAIC,KAAKH,EAAIE,MAAMxC,iBAAiB0C,MAAM,KAAK,GAEtDC,EAAiBL,EAAIH,GAAMI,EAAKJ,GAChCS,EAAcN,EAAIF,GAAMG,EAAKH,GAC7BS,EAAiBP,EAAID,GAAME,EAAKF,GAEtCT,EAAOC,UAAWiB,KAAlB,gCAA0BX,EAAKQ,GAA/B,qBAA+CH,GAA/C,GAAwDb,IAExDC,EAAOE,OAAQgB,KAAf,gCAAuBV,EAAKQ,GAA5B,qBAAyCJ,GAAzC,GAAkDb,IAElDC,EAAOG,UAAWe,KAAlB,gCAA0BT,EAAKQ,GAA/B,qBAA+CL,GAA/C,GAAwDb,IAExDC,EAAO9C,IAAKgE,KAAZ,gBACEN,QADF,cAEGL,EAAKQ,GAFR,cAGGP,EAAKQ,GAHR,cAIGP,EAAKQ,GAJR,GAKKlB,IAIP,OAAOC,G,kBCjEMmB,EAvBO,SAAC,GACgG,IAD9FC,EAC6F,EAD7FA,KAC6F,IADvFC,gBACuF,MAD5E,GAC4E,EADxEC,EACwE,EADxEA,MAAOC,EACiE,EADjEA,MACiE,IAD1DC,aAC0D,MADlD,EACkD,MAD/CC,eAC+C,SACpH,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACrC,kBAACL,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAACP,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACP,EAAD,CAAMc,MAAO,CAAEC,SAAUd,EAAUe,KAAMd,MAE3C,kBAACI,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACU,EAAA,EAAD,CAAYC,SAAUf,EAAOgB,QAAQ,KAAKL,MAAO,CAAEZ,QAAOkB,WAAY,IAAMC,cAAY,MAG5F,kBAACf,EAAA,EAAD,CAAMO,QAAQ,SAASD,WAAS,GAC9B,kBAACN,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CAAYE,QAAQ,KAAKG,UAAU,MAAMC,MAAM,SAASF,cAAY,GACjEhB,EAAU,kBAACmB,EAAA,EAAD,MAAepB,EAAQtD,EAAasD,GAAS,eCtBvDqB,EAAW,qD,kBCalBC,EAAiB,SAAC,GAA0J,IAAD,IAAvJC,cAAuJ,MAA9I,OAA8I,EAAtIT,EAAsI,EAAtIA,SAAsI,IAA5HL,eAA4H,MAAlH,aAAkH,EACzKe,EAVqB,eAACD,EAAD,uDAA2B,OAA3B,OAAsCE,YAAW,CAC5EC,KAAM,CACJC,OAAQ,GACRC,MAAO,OACPL,SACAM,QAAS,MAKIC,CAAqBP,EAArBO,GACf,OACE,kBAAC5B,EAAA,EAAD,CAAMM,WAAS,EAACU,UAAWa,IACzBC,UAAW,EACXvB,QAASA,EACTwB,UAAWT,EAAOE,KAClBZ,SAAUA,K,yBClBHoB,EAAc,WAAuC,IAAtCjF,EAAqC,uDAAZ,QACnD,OAAOkF,YAAoBC,YAAe,CACxCC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAOC,KAAK,KAClBC,KAAMF,IAAOC,KAAK,MAEpBE,MAAO,CACLJ,KAAMC,IAAOI,IAAI,KACjBF,KAAMF,IAAOI,IAAI,MAEnBC,UAAW,CACTN,KAAMC,IAAOM,KAAK,KAClBJ,KAAMF,IAAOM,KAAK,MAEpB7F,YAOS8F,EAFDb,ICjBDc,EAAeC,wBAAc,CACxCF,QACAG,SAAU,SAACjG,OAGAkG,EAAcF,wBAA4E,CACrGtH,KAAM,GACNyH,SAAU,SAACC,OAGAC,EAAeL,wBAAyF,CACnHM,WAAY,CAAEC,MAAM,EAAOC,QAAS,MACpCC,YAAa,SAACH,O,QCXVI,EAAyB,WAC7B,IAAMC,EAAWC,cACjBC,qBAAU,WACkBC,qBAAtBH,EAASI,SACXC,SAASC,MAAQ,QACR,oCAAoCC,KAAKP,EAASI,UAC3DC,SAASC,MAAQN,EAASQ,MAAM9H,QAEhC2H,SAASC,MAAQrI,EAAW+H,EAASI,SAAS1E,MAAM,KAAK+E,SAE1D,KAGCC,EAAW,SAAUC,EAAyBC,GAAoH,IAAzEC,EAAwE,uDAApC,GAAoC,EACvIC,oBAAS,GAD8H,mBAC9JzE,EAD8J,KACrJ0E,EADqJ,OAErID,mBAAcD,GAFuH,mBAE9JG,EAF8J,KAEpJC,EAFoJ,OAG3IH,mBAAwB,MAHmH,mBAG9J/B,EAH8J,KAGvJmC,EAHuJ,KAmBrK,OAdAhB,qBAAU,WACRa,GAAW,GACX,IAAMI,EAA2B,kBAATR,EAAoB,CAACS,MAAMT,IAASA,EAAKU,KAAI,SAAAC,GAAG,OAAIF,MAAME,MAClFxJ,EAAIqJ,GACDI,MAAK,SAAA3G,GAAM,OAAI9C,EAAI8C,EAAOyG,KAAI,SAAAG,GAAG,OAAIA,EAAIC,cACzCF,MAAK,SAAAjJ,GAAS,OACbsI,GAA4D,oBAA3BA,EAC7BA,EAAuBtI,GACvB2I,EAAY3I,MAEjBiJ,MAAK,SAAAG,GAAO,OAAIA,GAAWT,EAAYS,MACvCC,OAAM,SAAAC,GAAC,OAAIV,EAASU,EAAE/B,YACtBgC,SAAQ,kBAAMd,GAAW,QAC3B,IACI,CAAChC,EAAO1C,EAAS2E,IAKpBc,EAAmB,SAACjC,GAA4B,IAC5CC,EAAgBiC,qBAAWrC,GAA3BI,YAERI,qBAAU,WAMR,OAJEJ,EADED,EACU,CAAEA,UAASD,MAAM,GAEjB,CAAEC,QAAS,KAAMD,MAAM,IAE9B,kBAAME,EAAY,CAAED,QAAS,KAAMD,MAAM,OAC/C,CAACC,K,sDCYSmC,MAxDf,WAAiB,IAAD,EACqBtB,EAAkBjD,GAAU,SAACuD,GAAc,IAAD,EACvDA,GAAY,CAAC,CAAC,KAClC,OAF2E,oBAE1D,KAChB,IAJW,mBACPjC,EADO,KACA1C,EADA,KACS2E,EADT,OAMwBF,oBAAiB,IAAIrF,MAAOzC,kBANpD,mBAMPiJ,EANO,KAMMC,EANN,KAmBd,OAXAhC,qBAAU,WACR,IAAMiC,EAAWC,aAAY,WAC3BF,GAAe,IAAIzG,MAAOzC,oBACzB,KACH,OAAO,kBAAMqJ,cAAcF,MAC1B,IAEHpC,IACA+B,EAAiB/C,GAIf,kBAAC,EAAD,CAAgBpB,OAAQ,KACtB,kBAACrB,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,SAASC,MAAO,CAAEwF,aAAc,KACtD,kBAAChG,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAACP,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACgG,EAAA,EAAD,CAAUzF,MAAO,CAAEC,SAAU,GAAIb,MAAO0C,IAAO4D,MAAM,SAEvD,kBAAClG,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACU,EAAA,EAAD,CAAYE,QAAQ,KAAKL,MAAO,CAAEM,WAAY,KAA9C,WAKJ,kBAACd,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAACP,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACU,EAAA,EAAD,CAAYE,QAAQ,KAAKD,SAAU+E,EAAa1E,MAAM,SAASF,cAAY,OAIjF,kBAACf,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAAC,EAAD,CAAeV,MAAM,kBAAkBE,QAASA,EAASD,MAAO4E,EAASjG,UAAWmB,MAAO0C,IAAO6D,MAAM,KAAMzG,KAAM0G,MACpH,kBAAC,EAAD,CAAevG,MAAM,cAAcE,QAASA,EAASD,MAAO4E,EAAS2B,MAAOzG,MAAO0C,IAAOgE,OAAO,KAAM5G,KAAM6G,MAC7G,kBAAC,EAAD,CAAe1G,MAAM,eAAeE,QAASA,EAASD,MAAO4E,EAASlG,OAAQoB,MAAO0C,IAAOI,IAAI,KAAMhD,KAAM8G,OAE9G,kBAACxG,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAAC,EAAD,CAAeV,MAAM,eAAeE,QAASA,EAASD,MAAO4E,EAAS+B,OAAQ7G,MAAO0C,IAAOoE,OAAO,KAAMhH,KAAMiH,MAC/G,kBAAC,EAAD,CAAe9G,MAAM,WAAWE,QAASA,EAASD,MAAO4E,EAASkC,SAAUhH,MAAO0C,IAAOI,IAAI,KAAMhD,KAAMmH,OAE5G,kBAAC7G,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAAC,EAAD,CAAeV,MAAM,gBAAgBE,QAASA,EAASD,MAAO4E,EAASoC,WAAYlH,MAAO0C,IAAOoE,OAAO,KAAMhH,KAAMiH,MACpH,kBAAC,EAAD,CAAe9G,MAAM,iBAAiBE,QAASA,EAASD,MAAO4E,EAASlG,OAAQoB,MAAO0C,IAAOI,IAAI,KAAMhD,KAAMmH,S,6CCjDhHE,EAAaxF,aAAW,SAAAsB,GAAK,MAAK,CACtCrB,KAAM,CACJwF,gBAAiBnE,EAAMV,QAAQ8E,WAAWC,MAC1CC,SAAU,IACVzF,MAAO,YAiEI0F,EA5DD,SAAC,GAAS,eACtB,IAAM9F,EAASyF,IADM,EAEc3C,ENlBP,gJMkBgC,YAAsB,IAAD,oCAAR,GAAQ,GACvEiD,MAASC,MAE0B,WAAa,GAHuB,IAGvEtD,aAHuE,MAG/D,GAH+D,MAG3DuD,QACpB,MAAO,CAAEvD,QAAOuD,aAJ+D,MAGjD,GAHiD,KAK9E,IAPkB,mBAEd9E,EAFc,KAEP1C,EAFO,KAEE2E,EAFF,KAYrB,OAFAc,EAAiB/C,GACjBgB,IAEE,kBAAC,EAAD,CAAgBlD,QAAQ,UACtB,kBAACP,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAACP,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACU,EAAA,EAAD,CAAYI,cAAY,EAACF,QAAQ,MAC9Bd,EAAU,kBAACmB,EAAA,EAAD,CAAUL,QAAQ,OAAOQ,OAAQ,GAAIK,MAAO,MAAUgD,EAASV,SAIhF,kBAAChE,EAAA,EAAD,CAAMM,WAAS,GACb,kBAACN,EAAA,EAAD,CAAMC,MAAI,EAACI,IAAE,GACX,kBAACM,EAAA,EAAD,CAAYI,cAAY,EAACC,UAAU,OAChCjB,EAAU,kBAACmB,EAAA,EAAD,CAAUG,OAAQ,IAAKK,MAAM,SAAYgD,EAAS6C,WAInE,kBAACvH,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACEE,QAAQ,KACRI,MAAM,SACNL,SAAUb,EAAU,kBAACmB,EAAA,EAAD,MAAe,4BACnCH,cAAY,MAGlB,kBAACyG,EAAA,EAAD,CAAMxG,UAAU,MAAMyG,aAAW,uBAAuB1F,UAAWT,EAAOE,MACvE,CAAC,QAAS,QAAS,8CAA+C,UAC/D,WAAY,WAAY,cAAe,6BAA8B,cAAcuD,KAAI,SAAA2C,GAAC,OACxF,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAAC5G,UAAWa,IAAO5D,IAAKyJ,GACtC,kBAACG,EAAA,EAAD,KACG9H,EAAU,kBAACmB,EAAA,EAAD,MAAewG,QAIpC,kBAAC1H,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACEE,QAAQ,KACRI,MAAM,SACNL,SAAUb,EAAU,kBAACmB,EAAA,EAAD,MAAe,2BACnCH,cAAY,Q,6BCxCT+G,GAvBD,SAAC,GAAoE,IAAD,IAAjE/K,YAAiE,MAA1D,QAA0D,EAAjDwG,EAAiD,EAAjDA,QAASD,EAAwC,EAAxCA,KAAwC,IAAlCyE,gBAAkC,MAAvB,IAAuB,EACxEvE,EAAgBiC,qBAAWrC,GAA3BI,YAER,OACE,kBAACwE,GAAA,EAAD,CACE1E,KAAMA,EACN2E,oBAAqBC,KACrBC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,iBAAkBP,EAClBQ,QAAS,SAACC,EAAGC,GACI,cAAXA,GAGJjF,EAAY,CAAEF,MAAM,EAAOC,QAAS,SAEtC,kBAACmF,EAAA,EAAD,CAAO7H,QAAQ,SAAS8H,SAAU5L,GAC/BwG,K,oBCCMqF,GApBgB,SAAC,GAKrB,IAAD,IAJN3H,aAIM,MAJE,SAIF,EAJYvB,EAIZ,EAJYA,KAIZ,IAJkBG,aAIlB,MAJ0B,GAI1B,MAJ8BD,aAI9B,MAJsC,GAItC,EAJ0CiJ,EAI1C,EAJ0CA,SAAU7L,EAIpD,EAJoDA,OAIpD,IAJ4DD,YAI5D,MAJmE,SAInE,EACR,OACE,kBAAC+L,GAAA,EAAD,CAAW7H,MAAOA,GAChB,kBAAC8H,GAAA,EAAD,CAAYC,QAAS,kBACnBH,EAAS,CACP7L,SACAD,WAEF,kBAAC2C,EAAD,CAAMc,MAAO,CAAEC,SAAU,GAAIC,KAAMd,MAErC,kBAACe,EAAA,EAAD,CAAYC,SAAUf,EAAOgB,QAAQ,KAAKL,MAAO,CAAEyI,QAAS,eAAgBrJ,a,oBCMnEsJ,GAlBY,SAAC,GAA4B,EAA1BC,KAA2B,IAC/CjG,EAAauC,qBAAWxC,GAAxBC,SACR,OAAQ,kBAACkG,GAAA,EAAD,KACN,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CACEtM,KAAK,SACLC,OAAO,UAAU6L,SAAU3F,EAAUxD,KAAMuG,IAAUpG,MAAM,UAAUD,MAAO0C,IAAO4D,MAAM,OAC3F,kBAAC,GAAD,CAAoBlJ,OAAO,QAAQ6L,SAAU3F,EAAUxD,KAAM6G,IAAW1G,MAAM,cAAcD,MAAO0C,IAAOgE,OAAO,OACjH,kBAAC,GAAD,CAAoBtJ,OAAO,aAAa6L,SAAU3F,EAAUxD,KAAMiH,IAAU9G,MAAM,YAAYD,MAAO0C,IAAOI,IAAI,OAChH,kBAAC,GAAD,CAAoB1F,OAAO,SAAS6L,SAAU3F,EAAUxD,KAAM8G,IAAmB3G,MAAM,eAAeD,MAAO0C,IAAOI,IAAI,OACxH,kBAAC,GAAD,CAAoB1F,OAAO,YAAY6L,SAAU3F,EAAUxD,KAAM0G,IAASvG,MAAM,kBAAkBD,MAAO0C,IAAO6D,MAAM,OACtH,kBAAC,GAAD,CAAoBnJ,OAAO,SAAS6L,SAAU3F,EAAUxD,KAAMiH,IAAU9G,MAAM,eAAeD,MAAO0C,IAAOoE,OAAO,OAClH,kBAAC,GAAD,CAAoB1J,OAAO,WAAW6L,SAAU3F,EAAUxD,KAAMmH,IAAQhH,MAAM,WAAWD,MAAO0C,IAAOI,IAAI,UCFlG4G,GAdG,SAAC,GACgF,IAD9EvJ,EAC6E,EAD7EA,QAASzE,EACoE,EADpEA,KACoE,IAD9DoG,aAC8D,MADtD,IACsD,MADjDL,cACiD,MADxC,IACwC,MADnCkI,kBACmC,SAChG,OAAKjO,GAASyE,EAKZA,EAAU,kBAACmB,EAAA,EAAD,CAAUQ,MAAOA,EAAOL,OAAQA,EAAQR,QAAQ,OAAOL,MAAO,CAAEyI,QAAS,kBAC/E,yBAAKO,IAAG,+BAA0B9H,EAA1B,YAAoCpG,EAAgBsC,cAApD,QACR6L,IAAG,yBAAoBnO,GACvBkF,MAAO,CAAEkJ,aAAc,EAAGC,OAAQJ,EAAa,kBAAoB,MAPhE,yBAAKC,IAAI,kBAAkBhJ,MAAO,CAAEkJ,aAAc,EAAGhI,SAAS+H,IAAI,aC8B9DG,GAxBWC,gBAAK,YAAmH,IAAhHpD,EAA+G,EAA/GA,OAAQxF,EAAuG,EAAvGA,MAAOoF,EAAgG,EAAhGA,MAAOS,EAAyF,EAAzFA,WAAYtI,EAA6E,EAA7EA,OAAQC,EAAqE,EAArEA,UAAWmI,EAA0D,EAA1DA,SAAUtL,EAAgD,EAAhDA,KAAMc,EAA0C,EAA1CA,QAAS0N,EAAiC,EAAjCA,QAC9G,OACE,kBAACT,GAAA,EAAD,CAAUU,OAAK,EACbvJ,MAAO,CAAEwJ,OAAQ,WACjBhB,QAAS,WACP,IAAMiB,GAAY7N,EAAQyB,SAAS,KAAOzB,EAAQgD,MAAM,KAAK8K,KAAK,KAAO9N,GAASwB,cAClFkM,EAAQtK,KAAR,UAAgBqE,mBAAhB,sBAAoDoG,GAAY,CAAE7N,UAASd,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMsC,kBAEzF,kBAACkL,GAAA,EAAD,CAAW7H,MAAOA,GAChB,kBAAC,GAAD,CAAWS,MAAO,GAAIpG,KAAMA,IAC5B,6BACCc,GAEH,kBAAC0M,GAAA,EAAD,CAAW7H,MAAOA,GAAQzE,EAAa6J,IACvC,kBAACyC,GAAA,EAAD,CAAW7H,MAAOA,GAAQzE,EAAasK,IACvC,kBAACgC,GAAA,EAAD,CAAW7H,MAAOA,GAAQzE,EAAagC,IACvC,kBAACsK,GAAA,EAAD,CAAW7H,MAAOA,GAAQzE,EAAaiC,IACvC,kBAACqK,GAAA,EAAD,CAAW7H,MAAOA,GAAQzE,EAAaiK,IACvC,kBAACqC,GAAA,EAAD,CAAW7H,MAAOA,GAAQzE,EAAaoK,Q,UCX9BuD,GAbY,SAAC,GAAoE,IAAlE1O,EAAiE,EAAjEA,KAAiE,IAA3DwF,aAA2D,MAAnD,SAAmD,EACvF6I,EAAUM,cAEhB,OACE,kBAACC,GAAA,EAAD,KACG5O,EAAKsJ,KAAI,SAAAtH,GAAC,OACT,kBAAC,GAAD,eAAmBQ,IAAKR,EAAErB,SAAaqB,EAAvC,CAA0CwD,MAAOA,EAAO6I,QAASA,UCRnEQ,GAAoB,WACxB,OACE,kBAACxB,GAAA,EAAD,KACE,kBAAC5H,EAAA,EAAD,CAAUG,OAAQ,OAsBTkJ,GAjBa,SAAC,GAAmB,IAAD,IAAhBC,YAAgB,MAAT,GAAS,EAC7C,OACE,kBAACH,GAAA,EAAD,KACGI,MAAMD,GAAM9J,KAAK,MAAMqE,KAAI,SAACyD,EAAG9J,GAAJ,OAC1B,kBAAC2K,GAAA,EAAD,CAAUpL,IAAKS,GACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Y,8BChBGgM,GAAsB,CAClCrE,MAAO,GACPsE,uBAAwB,GACxBpN,WAAY,GACZV,QAAS,CACRI,QAAS,OAAQD,OAAQ,YAIZ,cAAsF,IAArFkH,EAAoF,uDAA5EwG,GAA4E,yCAA5D3N,EAA4D,EAA5DA,KAAM6N,EAAsD,EAAtDA,QAC7C,OAAQ7N,GACP,IAf2B,gBAgB1B,IAAM4N,EAAyBrN,EAAesN,EAAS1G,EAAMmC,OAC7D,OAAO,2BAAKnC,GAAZ,IAAmB3G,WAAYqN,EAASD,2BACzC,IAjBwB,aAkBvB,IAAME,EAAkC,QAA1B3G,EAAMrH,QAAQI,QAAoB,OAAS,MACzD,OAAO,2BACHiH,GADJ,IACWrH,QAAQ,aAAGI,QAAS4N,GAAUD,GACxCD,uBAAwBhO,EAAauH,EAAMmC,MAAP,YAAC,eAAkBuE,GAAnB,IAA4B3N,QAAS4N,OAE3E,IAtBuB,YAuBtB,OAAO,2BAAK3G,GAAZ,IAAmBmC,MAAOuE,EAASD,uBAAwBC,IAC5D,QACC,OAAO1G,IC0CK4G,GA3DG,WAAO,IAAD,EACa1G,EAASjD,EAAUpF,GADhC,mBACf0G,EADe,KACR1C,EADQ,KACC2E,EADD,OAE8CqG,qBAAWC,GAASN,IAFlE,0BAEbC,EAFa,EAEbA,uBAAwB9N,EAFX,EAEWA,QAASU,EAFpB,EAEoBA,WAAc0N,EAFlC,KAItBxH,IACA+B,EAAiB/C,GAEjBmB,qBAAU,WACR,IAAMsH,EAAUC,YAAW,WACzBF,EAAS,CAAElO,KDnBY,gBCmBS6N,QAASrN,MACxC,KACH,OAAO,kBAAM6N,aAAaF,MACzB,CAAC3N,IAEJqG,qBAAU,WACRqH,EAAS,CAAElO,KDvBU,YCuBO6N,QAASlG,MACpC,CAAC3E,EAAS2E,IAEb,IAAMxB,EAAWmI,uBAAY,YAAmC,IAAhCrO,EAA+B,EAA/BA,OAAQD,EAAuB,EAAvBA,KACtCkO,EAAS,CACPlO,KD7BoB,aC8BpB6N,QAAS,CACP5N,SAAQD,YAGX,CAACkO,IAEEK,EAAqBD,uBAAY,YAAiE,IAApDvL,EAAmD,EAA7DyL,OAAUzL,MAClDmL,EAAS,CAAElO,KDtCc,gBCsCO6N,QAAS9K,MACxC,CAACmL,IAIJ,OAAO,kBAAChI,EAAYuI,SAAb,CAAsB1L,MAAO,CAAErE,KAAMkP,EAAwBzH,aAClE,kBAAC,EAAD,CAAgB3C,QAAQ,UACtB,kBAACkL,GAAA,EAAD,CACE5K,QAAQ,WACRhB,MAAM,YACNC,MAAOvC,EACPiD,MAAO,CACLwF,aAAc,IAEhB0F,SAAUJ,IAEZ,kBAACK,GAAA,EAAD,CAAgB3K,UAAWa,KACzB,kBAAC+J,GAAA,EAAD,KACE,kBAAC,GAAD,CAAoBzC,KAAMtM,IAExBkD,EACE,kBAAC,GAAD,MACE,kBAAC,GAAD,CAAoBtE,KAAMkP,S,mBCnD3BkB,GARI,SAAC,GAAwD,IAAtDhM,EAAqD,EAArDA,MAAqD,IAA9CiM,UAA8C,MAAzC,IAAyC,EACzE,OACE,kBAACC,GAAA,EAAD,CAAQnM,MAAM,UAAUoB,UAAWgL,KAAMF,GAAIA,GAC1CjM,I,wCCmCQoM,GAnCA,WAAO,IAAD,EACmBzH,mBAAc,IADjC,mBACZ0H,EADY,KACCC,EADD,OAES1G,qBAAW3C,GAA/BE,EAFW,EAEXA,SAAUH,EAFC,EAEDA,MAFC,EAGK2B,mBAA2B,SAHhC,mBAGZzH,EAHY,KAGNqP,EAHM,KAanB,OARAxI,qBAAU,WAENuI,EADW,SAATpP,EACa,CAAEiK,gBAAiBnE,EAAMV,QAAQ8E,WAAWC,OAE5C,CAAEF,gBAAiBnE,EAAMV,QAAQC,QAAQC,SAEzD,CAACtF,IAGF,yBAAKyD,MAAO,CAAE6L,SAAU,IACtB,kBAACC,GAAA,EAAD,CAAQC,SAAS,SAAS3M,MAAM,UAAUY,MAAO0L,GAC/C,kBAACM,GAAA,EAAD,KACE,kBAAC7L,EAAA,EAAD,CAAYC,SAAS,QAAQC,QAAQ,KAAKL,MAAO,CAAE6L,SAAU,KAC7D,kBAAC,GAAD,CAAYP,GAAIjI,mBAAwBhE,MAAM,UAC9C,kBAAC,GAAD,CAAYiM,GAAE,UAAKjI,mBAAL,cAAyChE,MAAM,cAC7D,kBAAC,GAAD,CAAYiM,GAAE,UAAKjI,mBAAL,UAAqChE,MAAM,UACzD,kBAACkJ,GAAA,EAAD,CAAYC,QAAS,WACnB,IAAMyD,EAAmB,SAAT1P,EAAkB,QAAU,OAC5CqP,EAAQK,GAAUzJ,EAASyJ,KAEjB,UAAT1P,EAAmB,kBAAC,KAAD,CAAMyD,MAAO,CAAEE,KAAM4B,IAAOM,KAAK,QAAa,kBAAC,KAAD,CAAKpC,MAAO,CAAEE,KAAM4B,IAAOgE,OAAO,aCVjGoG,I,OAjBQ,SAAC,GAAkF,IAAhF9B,EAA+E,EAA/EA,QAAS/K,EAAsE,EAAtEA,MACjC,GADuG,EAA/D4G,OAC5B,CAAC,IAAD,EACwDmE,EAAUA,EAAQ,GAAK,GAD/E,IACF+B,eADE,MACQ,GADR,MACY7M,aADZ,MACoB,GADpB,MACwBF,aADxB,MACgC,GADhC,MACoCgL,QAASgC,OAD7C,MACiD,GADjD,EAEFtR,EAAkBsR,EAAlBtR,KAAMc,EAAYwQ,EAAZxQ,QACd,OACE,kBAACyF,EAAA,EAAD,CAAOrB,MAAO,CAAEmB,QAAS,GAAIkL,UAAW,WACtC,kBAAClM,EAAA,EAAD,CAAYE,QAAQ,KAAKD,SAAUxE,IACnC,kBAAC,GAAD,CAAWd,KAAMA,EAAMoG,MAAO,KAC9B,kBAACf,EAAA,EAAD,CAAYE,QAAQ,KAAKD,SAAQ,UAAKjF,EAAWgR,GAAhB,aAA6B7M,GAASU,MAAO,CAAEZ,WAChF,kBAACe,EAAA,EAAD,CAAYE,QAAQ,QAAQD,SAAUf,KAK5C,OAAO,OCQMiN,GAtBW,SAAC,GAAkF,IAAhFlC,EAA+E,EAA/EA,QAAS/K,EAAsE,EAAtEA,MACpC,GAD0G,EAA/D4G,OAC/B,CAAC,IAAD,cAC6BmE,EAD7B,GACHrM,EADG,KACQC,EADR,KACgBC,EADhB,KAEOsO,EAAsDxO,EAA/DoO,QAAsBK,EAAyCzO,EAAhDuB,MAAqBmN,EAA2B1O,EAAnC2O,OAAwBC,EAAW5O,EAAlBqB,MACpCwN,EAAsD5O,EAA/DmO,QAAsBU,EAAyC7O,EAAhDsB,MAAqBwN,EAA2B9O,EAAnC0O,OAAwBK,EAAW/O,EAAlBoB,MACpC4N,EAAsD/O,EAA/DkO,QAAsBc,EAAyChP,EAAhDqB,MAAqB4N,EAA2BjP,EAAnCyO,OAAwBS,EAAWlP,EAAlBmB,MAJ3C,EAKgBrB,EAAUqM,QAA5BxO,EALE,EAKFA,QAASd,EALP,EAKOA,KACjB,OACE,kBAACuG,EAAA,EAAD,CAAOrB,MAAO,CAAEmB,QAAS,GAAIkL,UAAW,WACtC,kBAAClM,EAAA,EAAD,CAAYE,QAAQ,KAAKD,SAAUxE,IACnC,kBAAC,GAAD,CAAWd,KAAMA,EAAMoG,MAAO,KAC9B,kBAACf,EAAA,EAAD,CAAYE,QAAQ,KAAKD,SAAQ,UAAKjF,EAAWoR,GAAhB,aAA0BC,GAAQxM,MAAO,CAAEZ,MAAOuN,GAAUF,KAC7F,kBAACtM,EAAA,EAAD,CAAYE,QAAQ,KAAKD,SAAQ,UAAKjF,EAAWyR,GAAhB,aAA0BC,GAAQ7M,MAAO,CAAEZ,MAAO2N,GAAUD,KAC7F,kBAAC3M,EAAA,EAAD,CAAYE,QAAQ,KAAKD,SAAQ,UAAKjF,EAAW6R,GAAhB,aAA0BC,GAAQjN,MAAO,CAAEZ,MAAO+N,GAAUD,KAC7F,kBAAC/M,EAAA,EAAD,CAAYE,QAAQ,QAAQD,SAAUf,KAK5C,OAAO,M,SCWM+N,GA1BM,SAAC,GAA6D,IAA3D7N,EAA0D,EAA1DA,QAAStE,EAAiD,EAAjDA,KAAMmE,EAA2C,EAA3CA,MAAO+M,EAAoC,EAApCA,QAASkB,EAA2B,EAA3BA,SACjDC,EAAO,KAAMC,GAAa,EAU9B,OATItD,MAAMuD,QAAQH,IAChBE,GAAa,EACbD,EAAOD,EAAS9I,KAAI,SAAC9G,EAAKS,GAAN,OAClB,kBAAC,KAAD,CAAKT,IAAKA,EAAK0O,QAAS1O,EAAKyC,KAAMuN,GAAYvP,SAGjDoP,EAAO,kBAAC,KAAD,CAAKnB,QAASA,EAASjM,KAAMd,IAIpC,kBAAC,KAAD,CAAqB8B,MAAM,MAAML,OAAQ,KACtCtB,EAAU,kBAACmB,EAAA,EAAD,CAAUG,OAAQ,IAAKR,QAAQ,SACxC,kBAAC,KAAD,CAAUpF,KAAMA,GAAQ,IACtB,kBAAC,KAAD,CAAeyS,gBAAgB,QAC/B,kBAAC,KAAD,CAAOvB,QAAQ,SACf,kBAAC,KAAD,CAAOjL,MAAO,MACd,kBAAC,KAAD,CAASyM,QAAUJ,EAA8BjB,GAAjBJ,KAChC,kBAAC,KAAD,CAAQ0B,cAAc,QACrBN,KCeIO,GApCO,SAAC,GAAoD,IAAlDzO,EAAiD,EAAjDA,MAAOnE,EAA0C,EAA1CA,KAAMkR,EAAoC,EAApCA,QAASkB,EAA2B,EAA3BA,SACzCS,EAAQ,KAAMP,GAAa,EAAOQ,EAAY,KAoBlD,OAnBI9D,MAAMuD,QAAQH,IAChBE,GAAa,EACbO,EAAQT,EAAS9I,KAAI,SAAC9G,EAAKS,GAAN,OACnB,kBAAC,KAAD,CAAMT,IAAKA,EAAKlB,KAAK,WAAW4P,QAAS1O,EAAKyC,KAAI,eAAUzC,EAAV,KAAkBiP,OAAQe,GAAYvP,GAAI8P,YAAa,OAE3GD,EAAYV,EAAS9I,KAAI,SAAC9G,EAAKS,GAAN,OACvB,oCAAgB+P,GAAIxQ,EAAKyQ,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI5Q,IAAKA,GACxD,0BAAM6Q,OAAO,KAAKC,UAAWd,GAAYvP,GAAIsQ,YAAa,KAC1D,0BAAMF,OAAO,MAAMC,UAAWd,GAAYvP,GAAIsQ,YAAa,UAI/DV,EAAQ,kBAAC,KAAD,CAAMvR,KAAK,WAAW4P,QAASA,EAASO,OAAQtN,EAAO4O,YAAa,EAAG9N,KAAI,eAAUiM,EAAV,OACnF4B,EAAY,oCAAgBE,GAAI9B,EAAS+B,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC/D,0BAAMC,OAAO,KAAKC,UAAWnP,EAAOoP,YAAa,KACjD,0BAAMF,OAAO,MAAMC,UAAWnP,EAAOoP,YAAa,MAI9C,kBAAC,KAAD,CAAqBtN,MAAM,MAAML,OAAQ,KAC/C,kBAAC,KAAD,CAAW5F,KAAMA,GAAQ,IACvB,8BACG8S,GAEH,kBAAC,KAAD,CAAO5B,QAAQ,SACf,kBAAC,KAAD,CAAOjL,MAAO,MACd,kBAAC,KAAD,CAAewM,gBAAgB,QAC/B,kBAAC,KAAD,CAASC,QAAUJ,EAA8BjB,GAAjBJ,KAC/B4B,KCJQW,GA1BO,SAAC,GAAoD,IAAlDxT,EAAiD,EAAjDA,KAAMkR,EAA2C,EAA3CA,QAAS/M,EAAkC,EAAlCA,MAAOiO,EAA2B,EAA3BA,SACzCqB,EAAQ,KAAMnB,GAAa,EAU/B,OATItD,MAAMuD,QAAQH,IAChBE,GAAa,EACbmB,EAAQrB,EAAS9I,KAAI,SAAC9G,EAAKS,GAAN,OACnB,kBAAC,KAAD,CAAMT,IAAKA,EAAKlB,KAAK,WAAW4P,QAAS1O,EAAKyC,KAAMuN,GAAYvP,GAAIwO,OAAQe,GAAYvP,SAG1FwQ,EAAQ,kBAAC,KAAD,CAAMnS,KAAK,WAAW4P,QAASA,EAASjM,KAAMd,EAAOsN,OAAQtN,IAIrE,kBAAC,KAAD,CAAqB8B,MAAM,MAAML,OAAQ,KACvC,kBAAC,KAAD,CAAWK,MAAO,IAAKL,OAAQ,IAAK5F,KAAMA,EAAM+E,MAAO,CAAEwF,aAAc,KACrE,kBAAC,KAAD,CAAekI,gBAAgB,QAC/B,kBAAC,KAAD,CAAOvB,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,CAASwB,QAAUJ,EAA8BjB,GAAjBJ,KAChC,kBAAC,KAAD,CAAQ0B,cAAc,QACrBc,KCpBIxM,GAAMJ,IAAOI,IAAI,KACjBH,GAAOD,IAAOC,KAAK,KACnB4D,GAAQ7D,IAAO6D,MAAM,KACrB8H,GAAc,CAAC1L,GAAMG,GAAKyD,IA4DxBgJ,GA1DK,SAACC,EAAkBrP,EAAkB2E,GACxD,MAAkB,QAAd0K,EAEF,oCACC,kBAAC,GAAD,CAAcrP,QAASA,EACtB4M,QAAQ,SACRlR,KAAMiJ,EAASlG,OAAQoB,MAAO8C,KAC/B,kBAAC,GAAD,CAAc3C,QAASA,EACtB4M,QAAQ,YACRlR,KAAMiJ,EAASnG,UAAWqB,MAAO2C,KAClC,kBAAC,GAAD,CAAcxC,QAASA,EACtB4M,QAAQ,YACRlR,KAAMiJ,EAASjG,UAAWmB,MAAOuG,KAClC,kBAAC,GAAD,CAAcpG,QAASA,EACtB8N,SAAU,CAAC,YAAa,SAAU,aAClClB,QAAQ,GACRlR,KAAMiJ,EAASlJ,IAAKoE,MAAOuG,MAKb,SAAdiJ,EACK,oCACP,kBAAC,GAAD,CACCzC,QAAQ,SACRlR,KAAMiJ,EAASlG,OAAQoB,MAAO8C,KAC/B,kBAAC,GAAD,CACCiK,QAAQ,YACRlR,KAAMiJ,EAASnG,UAAWqB,MAAO2C,KAClC,kBAAC,GAAD,CACCoK,QAAQ,YACRlR,KAAMiJ,EAASjG,UAAWmB,MAAOuG,KAClC,kBAAC,GAAD,CACC0H,SAAU,CAAC,YAAa,SAAU,aAClClB,QAAQ,GACRlR,KAAMiJ,EAASlJ,OAKjB,oCACC,kBAAC,GAAD,CACCmR,QAAQ,SACRlR,KAAMiJ,EAASlG,OAAQoB,MAAO8C,KAC/B,kBAAC,GAAD,CACCiK,QAAQ,YACRlR,KAAMiJ,EAASnG,UAAWqB,MAAO2C,KAClC,kBAAC,GAAD,CACCoK,QAAQ,YACRlR,KAAMiJ,EAASjG,UAAWmB,MAAOuG,KAClC,kBAAC,GAAD,CACC0H,SAAU,CAAC,YAAa,SAAU,aAClClB,QAAQ,GACRlR,KAAMiJ,EAASlJ,Q,wCCKJ6T,GAtDC,SAAC,GAAgG,I1BkFhFnL,E0BlF+E,IAA7FR,SAAYQ,MAAS9H,EAAwE,EAAxEA,QAASd,EAA+D,EAA/DA,KAA+D,EAC/B8I,EAC7E,CxBjB2B,mDwBiB3B,UAAqBjD,EAArB,YAAiC/E,K1BgFJ8H,E0B/EL,CAAE9H,UAASd,Q1BgF9B,SAACoJ,GAA8C,IAC5CtI,EAAY8H,EAAZ9H,QAD2C,EAEIsI,EAAS,IAAM,GAA9D2B,EAF2C,EAE3CA,MAAO7H,EAFoC,EAEpCA,OAAQC,EAF4B,EAE5BA,UAAWmI,EAFiB,EAEjBA,SAAUH,EAFO,EAEPA,OACtCwD,EAAuB,QAAZ7N,EAAoB,KAAmB,OAAZA,EAAmB,iBAAmBA,EAC9EgC,EAAcsG,EAAS,GAAGuF,IAAa,GAE3C,OADA7L,EAAcA,EAAYtC,MAAMsC,EAAYQ,OAAS,GAAIR,EAAYQ,QAC9D,CACLnD,KAAM0C,EAAeC,EAAa8F,GAClCmC,QACA7H,SACAC,YACAmI,WACAH,Y0B5F0C,CAAEhL,KAAM,KAHwD,mBACvGgH,EADuG,KAChG1C,EADgG,YACrFtE,EADqF,EACrFA,KAAM+C,EAD+E,EAC/EA,OAAQ6H,EADuE,EACvEA,MAAO5H,EADgE,EAChEA,UAAWgI,EADqD,EACrDA,OAAQG,EAD6C,EAC7CA,SAD6C,EAIpFpC,mBAAgB,OAJoE,mBAIvG8K,EAJuG,KAIhGC,EAJgG,KAM9G9L,IACA+B,EAAiB/C,GAMjB,OACE,kBAAC,EAAD,KACE,kBAACzC,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGM,MAAO,CAAEqM,UAAW,SAAU7G,aAAc,KAC5D,kBAACrF,EAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,GAClChB,EAAU,kBAACmB,EAAA,EAAD,MAAe9E,GAE5B,kBAAC,GAAD,CAAWd,KAAMA,EAAMyE,QAASA,EAASwJ,YAAU,MAGvD,kBAACvJ,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,SAASC,MAAO,CAAEwF,aAAc,KACtD,kBAAC,EAAD,CAAenG,MAAM,cAAcE,QAASA,EAASD,MAAOuG,EAAOzG,MAAO0C,IAAOgE,OAAO,KAAM5G,KAAM6G,MACpG,kBAAC,EAAD,CAAe1G,MAAM,eAAeE,QAASA,EAASD,MAAOtB,EAAQoB,MAAO0C,IAAOI,IAAI,KAAMhD,KAAM8G,MACnG,kBAAC,EAAD,CAAe3G,MAAM,kBAAkBE,QAASA,EAASD,MAAOrB,EAAWmB,MAAO0C,IAAO6D,MAAM,KAAMzG,KAAM0G,OAE7G,kBAACpG,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,SAASC,MAAO,CAAEwF,aAAc,KACtD,kBAAC,EAAD,CAAenG,MAAM,eAAeE,QAASA,EAASD,MAAO2G,EAAQ7G,MAAO0C,IAAOoE,OAAO,KAAMhH,KAAMiH,MACtG,kBAAC,EAAD,CAAe9G,MAAM,WAAWE,QAASA,EAASD,MAAO8G,EAAUhH,MAAO0C,IAAOI,IAAI,KAAMhD,KAAMmH,OAEnG,kBAAC7G,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACD,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACtB,kBAACiP,GAAA,EAAD,CAAa3O,QAAQ,WAAWL,MAAO,CAAEiP,SAAU,IAAKzJ,aAAc,KACpE,kBAAC0J,GAAA,EAAD,CAAYjB,GAAG,eAAf,gBACA,kBAACkB,GAAA,EAAD,CAAQ7P,MAAOwP,EAAOM,QAAQ,cAAclE,SA3B5B,SAACpG,GACzBiK,EAASjK,EAAEiG,OAAOzL,QA0B+DD,MAAM,gBAC7E,kBAACgQ,GAAA,EAAD,CAAU/P,MAAM,OAAhB,OACA,kBAAC+P,GAAA,EAAD,CAAU/P,MAAM,QAAhB,QACA,kBAAC+P,GAAA,EAAD,CAAU/P,MAAM,QAAhB,WAIN,kBAACE,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAQ,UACrB4O,GAAYG,EAAOvP,EAAStE,O,UC5BxBqU,OApBf,SAAaC,GACX,OACE,kBAACC,GAAA,EAAD,CAAenN,MAAOkN,EAAMlN,OAC1B,kBAAC,KAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAUkN,EAAM1M,YACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrC,UAAW0E,EAAMuK,KAAMpM,mBAAwBqM,OAAK,IAC3D,kBAAC,IAAD,CAAOlP,UAAWqO,GAASY,KAAI,UAAKpM,mBAAL,yBAC/B,kBAAC,IAAD,CAAO7C,UAAW8J,GAAWmF,KAAI,UAAKpM,mBAAL,gBACjC,kBAAC,IAAD,CAAO7C,UAAWoG,EAAO6I,KAAI,UAAKpM,mBAAL,YAC7B,kBAAC,IAAD,CAAUiI,GAAIjI,yBCXJsM,QACW,cAA7BC,OAAO1M,SAAS2M,UAEe,UAA7BD,OAAO1M,SAAS2M,UAEhBD,OAAO1M,SAAS2M,SAASC,MACvB,2DCRN,IAAMC,GAAW,WAAO,IAAD,EACY/L,mBAAgB3B,GAD5B,mBACd2N,EADc,KACAxN,EADA,OAEewB,mBAAqB,CAAEjB,QAAS,KAAMD,MAAM,EAAOvG,KAAM,UAFxE,mBAEdsG,EAFc,KAEFoN,EAFE,KAQrB,OACE,kBAAC,IAAMC,WAAP,KACE,kBAAC5N,EAAa0I,SAAd,CAAuB1L,MAAO,CAAE+C,MAAO2N,EAAcxN,SANrC,SAACjG,GAAD,OAA4BiG,EAAShB,EAAYjF,OAO/D,kBAACqG,EAAaoI,SAAd,CAAuB1L,MAAO,CAAEuD,aAAYG,YAL9B,SAACH,GAAD,OAA4BoN,EAAcpN,MAMtD,kBAAC,GAAD,CAAKR,MAAO2N,EAAcnN,WAAYA,QAQhDsN,IAASC,OACP,kBAAC,GAAD,MAAc7M,SAAS8M,eAAe,SD4GlC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/L,MAAK,SAAAgM,GACJA,EAAaC,gBAEd7L,OAAM,SAAA5C,GACL0O,QAAQ1O,MAAMA,EAAMc,c","file":"static/js/main.8f64f19c.chunk.js","sourcesContent":["export default [\r\n  { name: 'Afghanistan', abbr: 'AF', code: '93' },\r\n  { name: 'Alland Islands', abbr: 'AX', code: '358' },\r\n  { name: 'Albania', abbr: 'AL', code: '355' },\r\n  { name: 'Algeria', abbr: 'DZ', code: '213' },\r\n  { name: 'American Samoa', abbr: 'AS', code: '1-684' },\r\n  { name: 'Andorra', abbr: 'AD', code: '376' },\r\n  { name: 'Angola', abbr: 'AO', code: '244' },\r\n  { name: 'Anguilla', abbr: 'AI', code: '1-264' },\r\n  { name: 'Antarctica', abbr: 'AQ', code: '672' },\r\n  { name: 'Antigua and Barbuda', abbr: 'AG', code: '1-268' },\r\n  { name: 'Argentina', abbr: 'AR', code: '54' },\r\n  { name: 'Armenia', abbr: 'AM', code: '374' },\r\n  { name: 'Aruba', abbr: 'AW', code: '297' },\r\n  { name: 'Australia', abbr: 'AU', code: '61', suggested: true },\r\n  { name: 'Austria', abbr: 'AT', code: '43' },\r\n  { name: 'Azerbaijan', abbr: 'AZ', code: '994' },\r\n  { name: 'Bahamas', abbr: 'BS', code: '1-242' },\r\n  { name: 'Bahrain', abbr: 'BH', code: '973' },\r\n  { name: 'Bangladesh', abbr: 'BD', code: '880' },\r\n  { name: 'Barbados', abbr: 'BB', code: '1-246' },\r\n  { name: 'Belarus', abbr: 'BY', code: '375' },\r\n  { name: 'Belgium', abbr: 'BE', code: '32' },\r\n  { name: 'Belize', abbr: 'BZ', code: '501' },\r\n  { name: 'Benin', abbr: 'BJ', code: '229' },\r\n  { name: 'Bermuda', abbr: 'BM', code: '1-441' },\r\n  { name: 'Bhutan', abbr: 'BT', code: '975' },\r\n  { name: 'Bolivia', abbr: 'BO', code: '591' },\r\n  { name: 'Bosnia and Herzegovina', abbr: 'BA', code: '387' },\r\n  { name: 'Botswana', abbr: 'BW', code: '267' },\r\n  { name: 'Bouvet Island', abbr: 'BV', code: '47' },\r\n  { name: 'Brazil', abbr: 'BR', code: '55' },\r\n  {\r\n\r\n    name: 'British Indian Ocean Territory',\r\n    abbr: 'IO',\r\n    code: '246',\r\n  },\r\n  { name: 'British Virgin Islands', abbr: 'VG', code: '1-284' },\r\n  { name: 'Brunei', abbr: 'BN', code: '673' },\r\n  { name: 'Bulgaria', abbr: 'BG', code: '359' },\r\n  { name: 'Burkina Faso', abbr: 'BF', code: '226' },\r\n  { name: 'Burundi', abbr: 'BI', code: '257' },\r\n  { name: 'Cambodia', abbr: 'KH', code: '855' },\r\n  { name: 'Cameroon', abbr: 'CM', code: '237' },\r\n  { name: 'Canada', abbr: 'CA', code: '1', suggested: true },\r\n  { name: 'Cabo Verde', abbr: 'CV', code: '238' },\r\n  { name: 'Cayman Islands', abbr: 'KY', code: '1-345' },\r\n  { name: 'CAR', abbr: 'CF', code: '236' },\r\n  { name: 'Chad', abbr: 'TD', code: '235' },\r\n  { name: 'Chile', abbr: 'CL', code: '56' },\r\n  { name: 'China', abbr: 'CN', code: '86' },\r\n  { name: 'Christmas Island', abbr: 'CX', code: '61' },\r\n  { name: 'Cocos (Keeling) Islands', abbr: 'CC', code: '61' },\r\n  { name: 'Colombia', abbr: 'CO', code: '57' },\r\n  { name: 'Comoros', abbr: 'KM', code: '269' },\r\n  {\r\n    name: 'DRC',\r\n    abbr: 'CG',\r\n    code: '243',\r\n  },\r\n  {\r\n    name: 'Congo',\r\n    abbr: 'CD',\r\n    code: '242',\r\n  },\r\n  { name: 'Cook Islands', abbr: 'CK', code: '682' },\r\n  { name: 'Costa Rica', abbr: 'CR', code: '506' },\r\n  { name: 'Ivory Coast', abbr: 'CI', code: '225' },\r\n  { name: 'Croatia', abbr: 'HR', code: '385' },\r\n  { name: 'Cuba', abbr: 'CU', code: '53' },\r\n  { name: 'Curaçao', abbr: 'CW', code: '599' },\r\n  { name: 'Cyprus', abbr: 'CY', code: '357' },\r\n  { name: 'Czechia', abbr: 'CZ', code: '420' },\r\n  { name: 'Denmark', abbr: 'DK', code: '45' },\r\n  { name: 'Djibouti', abbr: 'DJ', code: '253' },\r\n  { name: 'Dominica', abbr: 'DM', code: '1-767' },\r\n  { name: 'Dominican Republic', abbr: 'DO', code: '1-809' },\r\n  { name: 'Ecuador', abbr: 'EC', code: '593' },\r\n  { name: 'Egypt', abbr: 'EG', code: '20' },\r\n  { name: 'El Salvador', abbr: 'SV', code: '503' },\r\n  { name: 'Equatorial Guinea', abbr: 'GQ', code: '240' },\r\n  { name: 'Eritrea', abbr: 'ER', code: '291' },\r\n  { name: 'Estonia', abbr: 'EE', code: '372' },\r\n  { name: 'Ethiopia', abbr: 'ET', code: '251' },\r\n  { name: 'Falkland Islands', abbr: 'FK', code: '500' },\r\n  { name: 'Faeroe Islands', abbr: 'FO', code: '298' },\r\n  { name: 'Fiji', abbr: 'FJ', code: '679' },\r\n  { name: 'Finland', abbr: 'FI', code: '358' },\r\n  { name: 'France', abbr: 'FR', code: '33', suggested: true },\r\n  { name: 'French Guiana', abbr: 'GF', code: '594' },\r\n  { name: 'French Polynesia', abbr: 'PF', code: '689' },\r\n  { name: 'French Southern Territories', abbr: 'TF', code: '262' },\r\n  { name: 'Gabon', abbr: 'GA', code: '241' },\r\n  { name: 'Gambia', abbr: 'GM', code: '220' },\r\n  { name: 'Georgia', abbr: 'GE', code: '995' },\r\n  { name: 'Germany', abbr: 'DE', code: '49', suggested: true },\r\n  { name: 'Ghana', abbr: 'GH', code: '233' },\r\n  { name: 'Gibraltar', abbr: 'GI', code: '350' },\r\n  { name: 'Greece', abbr: 'GR', code: '30' },\r\n  { name: 'Greenland', abbr: 'GL', code: '299' },\r\n  { name: 'Grenada', abbr: 'GD', code: '1-473' },\r\n  { name: 'Guadeloupe', abbr: 'GP', code: '590' },\r\n  { name: 'Guam', abbr: 'GU', code: '1-671' },\r\n  { name: 'Guatemala', abbr: 'GT', code: '502' },\r\n  { name: 'Guernsey', abbr: 'GG', code: '44' },\r\n  { name: 'Guinea-Bissau', abbr: 'GW', code: '245' },\r\n  { name: 'Guinea', abbr: 'GN', code: '224' },\r\n  { name: 'Guyana', abbr: 'GY', code: '592' },\r\n  { name: 'Haiti', abbr: 'HT', code: '509' },\r\n  {\r\n\r\n    name: 'Heard Island and McDonald Islands',\r\n    abbr: 'HM',\r\n    code: '672',\r\n  },\r\n  {\r\n\r\n    name: 'Vatican City',\r\n    abbr: 'VA',\r\n    code: '379',\r\n  },\r\n  { name: 'Honduras', abbr: 'HN', code: '504' },\r\n  { name: 'Hong Kong', abbr: 'HK', code: '852' },\r\n  { name: 'Hungary', abbr: 'HU', code: '36' },\r\n  { name: 'Iceland', abbr: 'IS', code: '354' },\r\n  { name: 'India', abbr: 'IN', code: '91' },\r\n  { name: 'Indonesia', abbr: 'ID', code: '62' },\r\n  { name: 'Iran', abbr: 'IR', code: '98' },\r\n  { name: 'Iraq', abbr: 'IQ', code: '964' },\r\n  { name: 'Ireland', abbr: 'IE', code: '353' },\r\n  { name: 'Isle of Man', abbr: 'IM', code: '44' },\r\n  { name: 'Israel', abbr: 'IL', code: '972' },\r\n  { name: 'Italy', abbr: 'IT', code: '39' },\r\n  { name: 'Jamaica', abbr: 'JM', code: '1-876' },\r\n  { name: 'Japan', abbr: 'JP', code: '81', suggested: true },\r\n  { name: 'Jersey', abbr: 'JE', code: '44' },\r\n  { name: 'Jordan', abbr: 'JO', code: '962' },\r\n  { name: 'Kazakhstan', abbr: 'KZ', code: '7' },\r\n  { name: 'Kenya', abbr: 'KE', code: '254' },\r\n  { name: 'Kiribati', abbr: 'KI', code: '686' },\r\n  {\r\n\r\n    name: \"Korea, Democratic People's Republic of\",\r\n    abbr: 'KP',\r\n    code: '850',\r\n  },\r\n  { name: 'S. Korea', abbr: 'KR', code: '82' },\r\n  { name: 'Kosovo', abbr: 'XK', code: '383' },\r\n  { name: 'Kuwait', abbr: 'KW', code: '965' },\r\n  { name: 'Kyrgyzstan', abbr: 'KG', code: '996' },\r\n  {\r\n\r\n    name: \"Laos\",\r\n    abbr: 'LA',\r\n    code: '856',\r\n  },\r\n  { name: 'Latvia', abbr: 'LV', code: '371' },\r\n  { name: 'Lebanon', abbr: 'LB', code: '961' },\r\n  { name: 'Lesotho', abbr: 'LS', code: '266' },\r\n  { name: 'Liberia', abbr: 'LR', code: '231' },\r\n  { name: 'Libya', abbr: 'LY', code: '218' },\r\n  { name: 'Liechtenstein', abbr: 'LI', code: '423' },\r\n  { name: 'Lithuania', abbr: 'LT', code: '370' },\r\n  { name: 'Luxembourg', abbr: 'LU', code: '352' },\r\n  { name: 'Macao', abbr: 'MO', code: '853' },\r\n  {\r\n\r\n    name: 'North Macedonia',\r\n    abbr: 'MK',\r\n    code: '389',\r\n  },\r\n  { name: 'Madagascar', abbr: 'MG', code: '261' },\r\n  { name: 'Malawi', abbr: 'MW', code: '265' },\r\n  { name: 'Malaysia', abbr: 'MY', code: '60' },\r\n  { name: 'Maldives', abbr: 'MV', code: '960' },\r\n  { name: 'Mali', abbr: 'ML', code: '223' },\r\n  { name: 'Malta', abbr: 'MT', code: '356' },\r\n  { name: 'Marshall Islands', abbr: 'MH', code: '692' },\r\n  { name: 'Martinique', abbr: 'MQ', code: '596' },\r\n  { name: 'Mauritania', abbr: 'MR', code: '222' },\r\n  { name: 'Mauritius', abbr: 'MU', code: '230' },\r\n  { name: 'Mayotte', abbr: 'YT', code: '262' },\r\n  { name: 'Mexico', abbr: 'MX', code: '52' },\r\n  {\r\n    name: 'Micronesia, Federated States of',\r\n    abbr: 'FM',\r\n    code: '691',\r\n  },\r\n  { name: 'Moldova', abbr: 'MD', code: '373' },\r\n  { name: 'Monaco', abbr: 'MC', code: '377' },\r\n  { name: 'Mongolia', abbr: 'MN', code: '976' },\r\n  { name: 'Montenegro', abbr: 'ME', code: '382' },\r\n  { name: 'Montserrat', abbr: 'MS', code: '1-664' },\r\n  { name: 'Morocco', abbr: 'MA', code: '212' },\r\n  { name: 'Mozambique', abbr: 'MZ', code: '258' },\r\n  { name: 'Myanmar', abbr: 'MM', code: '95' },\r\n  { name: 'Namibia', abbr: 'NA', code: '264' },\r\n  { name: 'Nauru', abbr: 'NR', code: '674' },\r\n  { name: 'Nepal', abbr: 'NP', code: '977' },\r\n  { name: 'Netherlands', abbr: 'NL', code: '31' },\r\n  { name: 'New Caledonia', abbr: 'NC', code: '687' },\r\n  { name: 'New Zealand', abbr: 'NZ', code: '64' },\r\n  { name: 'Nicaragua', abbr: 'NI', code: '505' },\r\n  { name: 'Niger', abbr: 'NE', code: '227' },\r\n  { name: 'Nigeria', abbr: 'NG', code: '234' },\r\n  { name: 'Niue', abbr: 'NU', code: '683' },\r\n  { name: 'Norfolk Island', abbr: 'NF', code: '672' },\r\n  { name: 'Northern Mariana Islands', abbr: 'MP', code: '1-670' },\r\n  { name: 'Norway', abbr: 'NO', code: '47' },\r\n  { name: 'Oman', abbr: 'OM', code: '968' },\r\n  { name: 'Pakistan', abbr: 'PK', code: '92' },\r\n  { name: 'Palau', abbr: 'PW', code: '680' },\r\n  { name: 'Palestine', abbr: 'PS', code: '970' },\r\n  { name: 'Panama', abbr: 'PA', code: '507' },\r\n  { name: 'Papua New Guinea', abbr: 'PG', code: '675' },\r\n  { name: 'Paraguay', abbr: 'PY', code: '595' },\r\n  { name: 'Peru', abbr: 'PE', code: '51' },\r\n  { name: 'Philippines', abbr: 'PH', code: '63' },\r\n  { name: 'Pitcairn', abbr: 'PN', code: '870' },\r\n  { name: 'Poland', abbr: 'PL', code: '48' },\r\n  { name: 'Portugal', abbr: 'PT', code: '351' },\r\n  { name: 'Puerto Rico', abbr: 'PR', code: '1' },\r\n  { name: 'Qatar', abbr: 'QA', code: '974' },\r\n  { name: 'Réunion', abbr: 'RE', code: '262' },\r\n  { name: 'Romania', abbr: 'RO', code: '40' },\r\n  { name: 'Russia', abbr: 'RU', code: '7' },\r\n  { name: 'Rwanda', abbr: 'RW', code: '250' },\r\n  { name: 'St. Barth', abbr: 'BL', code: '590' },\r\n  { name: 'Saint Helena', abbr: 'SH', code: '290' },\r\n  { name: 'Saint Kitts and Nevis', abbr: 'KN', code: '1-869' },\r\n  { name: 'Saint Lucia', abbr: 'LC', code: '1-758' },\r\n  { name: 'Saint Martin', abbr: 'MF', code: '590' },\r\n  { name: 'Saint Pierre Miquelon', abbr: 'PM', code: '508' },\r\n  {\r\n    name: 'St. Vincent Grenadines',\r\n    abbr: 'VC',\r\n    code: '1-784',\r\n  },\r\n  { name: 'Samoa', abbr: 'WS', code: '685' },\r\n  { name: 'San Marino', abbr: 'SM', code: '378' },\r\n  { name: 'Sao Tome and Principe', abbr: 'ST', code: '239' },\r\n  { name: 'Saudi Arabia', abbr: 'SA', code: '966' },\r\n  { name: 'Senegal', abbr: 'SN', code: '221' },\r\n  { name: 'Serbia', abbr: 'RS', code: '381' },\r\n  { name: 'Seychelles', abbr: 'SC', code: '248' },\r\n  { name: 'Sierra Leone', abbr: 'SL', code: '232' },\r\n  { name: 'Singapore', abbr: 'SG', code: '65' },\r\n  { name: 'Sint Maarten', abbr: 'SX', code: '1-721' },\r\n  { name: 'Slovakia', abbr: 'SK', code: '421' },\r\n  { name: 'Slovenia', abbr: 'SI', code: '386' },\r\n  { name: 'Solomon Islands', abbr: 'SB', code: '677' },\r\n  { name: 'Somalia', abbr: 'SO', code: '252' },\r\n  { name: 'South Africa', abbr: 'ZA', code: '27' },\r\n  {\r\n\r\n    name: 'South Georgia and the South Sandwich Islands',\r\n    abbr: 'GS',\r\n    code: '500',\r\n  },\r\n  { name: 'South Sudan', abbr: 'SS', code: '211' },\r\n  { name: 'Spain', abbr: 'ES', code: '34' },\r\n  { name: 'Sri Lanka', abbr: 'LK', code: '94' },\r\n  { name: 'Sudan', abbr: 'SD', code: '249' },\r\n  { name: 'Suriname', abbr: 'SR', code: '597' },\r\n  { name: 'Svalbard and Jan Mayen', abbr: 'SJ', code: '47' },\r\n  { name: 'Eswatini', abbr: 'SZ', code: '268' },\r\n  { name: 'Sweden', abbr: 'SE', code: '46' },\r\n  { name: 'Switzerland', abbr: 'CH', code: '41' },\r\n  { name: 'Syria', abbr: 'SY', code: '963' },\r\n  { name: 'Taiwan', abbr: 'TW', code: '886' },\r\n  { name: 'Tajikistan', abbr: 'TJ', code: '992' },\r\n  { name: 'Thailand', abbr: 'TH', code: '66' },\r\n  { name: 'Timor-Leste', abbr: 'TL', code: '670' },\r\n  { name: 'Togo', abbr: 'TG', code: '228' },\r\n  { name: 'Tokelau', abbr: 'TK', code: '690' },\r\n  { name: 'Tonga', abbr: 'TO', code: '676' },\r\n  { name: 'Trinidad and Tobago', abbr: 'TT', code: '1-868' },\r\n  { name: 'Tunisia', abbr: 'TN', code: '216' },\r\n  { name: 'Turkey', abbr: 'TR', code: '90' },\r\n  { name: 'Turkmenistan', abbr: 'TM', code: '993' },\r\n  { name: 'Turks and Caicos', abbr: 'TC', code: '1-649' },\r\n  { name: 'Tuvalu', abbr: 'TV', code: '688' },\r\n  { name: 'Uganda', abbr: 'UG', code: '256' },\r\n  { name: 'Ukraine', abbr: 'UA', code: '380' },\r\n  { name: 'UAE', abbr: 'AE', code: '971' },\r\n  { name: 'UK', abbr: 'GB', code: '44' },\r\n  { name: 'Tanzania', abbr: 'TZ', code: '255' },\r\n  { name: 'USA', abbr: 'US', code: '1', suggested: true },\r\n  { name: 'Uruguay', abbr: 'UY', code: '598' },\r\n  { name: 'US Virgin Islands', abbr: 'VI', code: '1-340' },\r\n  { name: 'Uzbekistan', abbr: 'UZ', code: '998' },\r\n  { name: 'Vanuatu', abbr: 'VU', code: '678' },\r\n  { name: 'Venezuela', abbr: 'VE', code: '58' },\r\n  { name: 'Vietnam', abbr: 'VN', code: '84' },\r\n  { name: 'Wallis and Futuna', abbr: 'WF', code: '681' },\r\n  { name: 'Western Sahara', abbr: 'EH', code: '212' },\r\n  { name: 'Yemen', abbr: 'YE', code: '967' },\r\n  { name: 'Zambia', abbr: 'ZM', code: '260' },\r\n  { name: 'Zimbabwe', abbr: 'ZW', code: '263' },\r\n];","import countries from './countries'\r\nimport { ModifyResponseCB, RowData, SortOption, CountryData, CountryModifiedResponse, CountryRouteProps } from './types'\r\n\r\nconst log = (...messages: any[]) => console.log(...messages)\r\n\r\nconst all = (data: any[]): Promise<any[]> => {\r\n  return Promise.all(data)\r\n}\r\n\r\nconst capitalize = (str: string): string => {\r\n  if (!str) return ''\r\n  return str[0].toUpperCase() + str.slice(1)\r\n}\r\nconst ModifyResponseCallback: ModifyResponseCB = (responses: any[][]) => {\r\n  const result = responses[0].slice(1).reduce((acc: RowData[], current) => {\r\n    const country = countries.find(o => o.name === current.country)\r\n    if (country) {\r\n      return [...acc, { ...current, code: country.abbr }]\r\n    } else {\r\n      return [...acc, { ...current, code: null }]\r\n    }\r\n  }, [])\r\n  return result\r\n}\r\n\r\nconst formatNumber = (x: null | number): string => {\r\n  if (!x) return ''\r\n  return x.toLocaleString()\r\n}\r\n\r\n\r\nconst sortComparison = ({ type, sortBy, orderBy }: SortOption) => (a: any, b: any) => {\r\n  if (type === 'string') {\r\n    if (orderBy === 'asc') {\r\n      return a[sortBy].localeCompare(b[sortBy])\r\n    } else {\r\n      return b[sortBy].localeCompare(a[sortBy])\r\n    }\r\n  } else {\r\n    if (orderBy === 'asc') {\r\n      return a[sortBy] - b[sortBy]\r\n    } else {\r\n      return b[sortBy] - a[sortBy]\r\n    }\r\n  }\r\n}\r\n\r\nconst sortCallback = (oldData: RowData[], options: SortOption) =>\r\n  oldData.slice().sort(sortComparison(options))\r\n\r\n\r\nconst filterCallback = (searchTerm: string | number | null, data: RowData[] | null) => {\r\n  if (!data) return []\r\n  return data.filter(d => {\r\n    if (Number.isNaN(Number(searchTerm))) {\r\n      return d.country.toLowerCase().includes((searchTerm as string).toLowerCase())\r\n    } else {\r\n      return Object.keys(d).some((key: any) => d[key as keyof RowData]?.toString().includes(searchTerm as string))\r\n    }\r\n  })\r\n}\r\n\r\n\r\nconst getDifferences = (countryData: any[], rest?: {}): CountryData => {\r\n  const result: CountryData = {\r\n    all: [],\r\n    confirmed: [],\r\n    deaths: [],\r\n    recovered: []\r\n  }\r\n\r\n  for (let i = 1, len = countryData.length, [d, k1, k2, k3] = Object.keys(countryData[i]); i < len; i++) {\r\n    const cur = countryData[i]\r\n    const prev = countryData[i - 1]\r\n    const date = new Date(cur.date).toLocaleString().split(',')[0]\r\n\r\n    const diff_confirmed = cur[k1] - prev[k1]\r\n    const diff_deaths = cur[k2] - prev[k2]\r\n    const diff_recovered = cur[k3] - prev[k3]\r\n\r\n    result.confirmed!.push({ [k1]: diff_confirmed, date, ...rest })\r\n\r\n    result.deaths!.push({ [k2]: diff_deaths, date, ...rest })\r\n\r\n    result.recovered!.push({ [k3]: diff_recovered, date, ...rest })\r\n\r\n    result.all!.push({\r\n      date,\r\n      [k1]: diff_confirmed,\r\n      [k2]: diff_deaths,\r\n      [k3]: diff_recovered,\r\n      ...rest\r\n    })\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst modifyResponseCountryCB = (state: CountryRouteProps) => {\r\n  return (response: any[]): CountryModifiedResponse => {\r\n    const { country } = state\r\n    const { cases, deaths, recovered, critical, active } = response[1] || {}\r\n    const _country = country === 'USA' ? 'US' : country === 'UK' ? 'United Kingdom' : country;\r\n    let countryData = response[0][_country] || []\r\n    countryData = countryData.slice(countryData.length - 11, countryData.length)\r\n    return {\r\n      data: getDifferences(countryData, state),\r\n      cases,\r\n      deaths,\r\n      recovered,\r\n      critical,\r\n      active\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n  all,\r\n  log,\r\n  capitalize,\r\n  getDifferences,\r\n  formatNumber,\r\n  sortCallback,\r\n  filterCallback,\r\n  ModifyResponseCallback,\r\n  modifyResponseCountryCB\r\n}","import React from 'react'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { formatNumber } from '../helpers'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\n\r\n\r\nconst LabelWithIcon = ({ Icon, iconSize = 60, color, label, value = 0, loading = false }:\r\n  { Icon: React.ElementType, iconSize?: number, color: string, label: string, value?: number, loading?: boolean }) => {\r\n  return (\r\n    <Grid item md={12} xs={12} sm={12} lg={4}>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <Icon style={{ fontSize: iconSize, fill: color }} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography children={label} variant=\"h3\" style={{ color, marginLeft: 10 }} gutterBottom />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid justify=\"center\" container>\r\n        <Grid item md={6}>\r\n          <Typography variant=\"h4\" component=\"div\" align=\"center\" gutterBottom>\r\n            {loading ? <Skeleton /> : value ? formatNumber(value) : 'Unknown'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LabelWithIcon","export const MAIN_API = 'https://coronavirus-19-api.herokuapp.com/countries'\r\nexport const TIME_SERIES_API = 'https://pomber.github.io/covid19/timeseries.json'\r\nexport const COVID_WIKI_API = 'https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro=&explaintext=&origin=*&titles=Coronavirus%20disease%202019'\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Grid, Paper, GridContentAlignment } from '@material-ui/core'\r\n\r\nconst paperContainerStyles = (height: string | number = 'auto') => makeStyles({\r\n  root: {\r\n    margin: 10,\r\n    width: 'auto',\r\n    height,\r\n    padding: 25\r\n  }\r\n})\r\n\r\nconst PaperContainer = ({ height = 'auto', children, justify = 'flex-start' }: { height?: number | string, children: React.ReactNode, justify?: GridContentAlignment | any }) => {\r\n  const styles = paperContainerStyles(height)()\r\n  return (\r\n    <Grid container component={Paper}\r\n      elevation={4}\r\n      justify={justify}\r\n      className={styles.root}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  PaperContainer\r\n}","import { createMuiTheme, colors, responsiveFontSizes } from '@material-ui/core'\r\n\r\nexport const createTheme = (type: 'dark' | 'light' = 'light') => {\r\n  return responsiveFontSizes(createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: colors.blue[600],\r\n        dark: colors.blue[700]\r\n      },\r\n      error: {\r\n        main: colors.red[600],\r\n        dark: colors.red[500]\r\n      },\r\n      secondary: {\r\n        main: colors.grey[700],\r\n        dark: colors.grey[300]\r\n      },\r\n      type\r\n    }\r\n  }))\r\n}\r\n\r\nconst theme = createTheme()\r\n\r\nexport default theme","\r\nimport { createContext } from 'react'\r\nimport theme from '../theme'\r\nimport { ToastProps } from './types'\r\n\r\nexport const ThemeContext = createContext({\r\n  theme,\r\n  setTheme: (type: 'dark' | 'light') => { }\r\n})\r\n\r\nexport const SortContext = createContext<{ data: any[] | null, sortData: (sortOptions: any) => void }>({\r\n  data: [],\r\n  sortData: (sortOptions: any) => { }\r\n})\r\n\r\nexport const ToastContext = createContext<{ toastProps: ToastProps, toggleToast: (toastProps: ToastProps) => void }>({\r\n  toastProps: { open: false, message: null },\r\n  toggleToast: (toastProps: any) => { }\r\n})\r\n","import { ToastContext } from './contexts'\r\nimport { useLocation } from 'react-router'\r\nimport { capitalize, all } from '.'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport { ModifyResponseCB, CountryRouteProps } from './types'\r\n\r\nconst useChangeDocumentTitle = () => {\r\n  const location = useLocation<CountryRouteProps>()\r\n  useEffect(() => {\r\n    if (location.pathname === process.env.PUBLIC_URL) {\r\n      document.title = 'World'\r\n    } else if (/covid-dashboard\\/countries\\/.{2,}/.test(location.pathname)) {\r\n      document.title = location.state.country\r\n    } else {\r\n      document.title = capitalize(location.pathname.split('/').pop() as string)\r\n    }\r\n  }, [])\r\n}\r\n\r\nconst useFetch = <T = any>(urls: string | string[], modifyResponseCallback?: ModifyResponseCB, defaultResponseValue: any[] | any = []): [string | null, boolean, T] => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [response, setResponse] = useState<any>(defaultResponseValue)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    const requests = typeof urls === 'string' ? [fetch(urls)] : urls.map(url => fetch(url))\r\n    all(requests)\r\n      .then(result => all(result.map(res => res.json())))\r\n      .then(responses =>\r\n        modifyResponseCallback && typeof modifyResponseCallback === 'function'\r\n          ? modifyResponseCallback(responses)\r\n          : setResponse(responses)\r\n      )\r\n      .then(results => results && setResponse(results))\r\n      .catch(e => setError(e.message))\r\n      .finally(() => setLoading(false))\r\n  }, [])\r\n  return [error, loading, response]\r\n}\r\n\r\n\r\n\r\nconst useToastCallback = (message: string | null) => {\r\n  const { toggleToast } = useContext(ToastContext)\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      toggleToast({ message, open: true })\r\n    } else {\r\n      toggleToast({ message: null, open: false })\r\n    }\r\n    return () => toggleToast({ message: null, open: false })\r\n  }, [message])\r\n}\r\n\r\n\r\n\r\nexport {\r\n  useFetch,\r\n  useToastCallback,\r\n  useChangeDocumentTitle\r\n}","import React, { useState, useEffect } from 'react';\r\nimport LabelWithIcon from '../components/LabelWithIcon';\r\nimport { RowData } from '../helpers/types';\r\nimport { MAIN_API } from '../helpers/config';\r\nimport { PaperContainer } from '../containers/PaperContainer';\r\nimport { Grid, colors, Typography } from '@material-ui/core'\r\nimport { useFetch, useChangeDocumentTitle, useToastCallback } from '../helpers/hooks';\r\nimport { GroupAdd, PersonAddDisabled, PeopleAlt, Report, Healing, Language } from '@material-ui/icons'\r\n\r\nfunction Main() {\r\n  const [error, loading, response] = useFetch<RowData>(MAIN_API, (response) => {\r\n    const [countries] = response || [[{}]]\r\n    return countries[0]\r\n  }, {})\r\n\r\n  const [dateAndTime, setDateAndTime] = useState<string>(new Date().toLocaleString())\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setDateAndTime(new Date().toLocaleString())\r\n    }, 1000)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useChangeDocumentTitle()\r\n  useToastCallback(error)\r\n\r\n\r\n  return (\r\n    <PaperContainer height={875}>\r\n      <Grid container justify=\"center\" style={{ marginBottom: 30 }}>\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Language style={{ fontSize: 60, color: colors.brown[500] }} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h2\" style={{ marginLeft: 10 }}>\r\n              World\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Typography variant=\"h3\" children={dateAndTime} align=\"center\" gutterBottom />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\" >\r\n        <LabelWithIcon label=\"Total Recovered\" loading={loading} value={response.recovered} color={colors.green[500]} Icon={Healing} />\r\n        <LabelWithIcon label=\"Total Cases\" loading={loading} value={response.cases} color={colors.yellow[700]} Icon={PeopleAlt} />\r\n        <LabelWithIcon label=\"Total Deaths\" loading={loading} value={response.deaths} color={colors.red[400]} Icon={PersonAddDisabled} />\r\n      </Grid>\r\n      <Grid container justify=\"center\" >\r\n        <LabelWithIcon label=\"Active Cases\" loading={loading} value={response.active} color={colors.orange[500]} Icon={GroupAdd} />\r\n        <LabelWithIcon label=\"Critical\" loading={loading} value={response.critical} color={colors.red[500]} Icon={Report} />\r\n      </Grid>\r\n      <Grid container justify=\"center\" >\r\n        <LabelWithIcon label=\"Today's Cases\" loading={loading} value={response.todayCases} color={colors.orange[500]} Icon={GroupAdd} />\r\n        <LabelWithIcon label=\"Today's Deaths\" loading={loading} value={response.deaths} color={colors.red[500]} Icon={Report} />\r\n      </Grid>\r\n    </PaperContainer>\r\n  );\r\n}\r\n\r\n\r\nexport default Main;\r\n","import React from 'react'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { PaperContainer } from '../containers/PaperContainer'\r\nimport { COVID_WIKI_API } from '../helpers/config'\r\nimport { useChangeDocumentTitle, useFetch, useToastCallback } from '../helpers/hooks'\r\nimport { List, ListItem, ListItemText, Paper, makeStyles, Typography, Grid } from '@material-ui/core'\r\n\r\n\r\n\r\nconst listStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    maxWidth: 450,\r\n    width: '100%'\r\n  }\r\n}))\r\n\r\n\r\nconst About = ({ }) => {\r\n  const styles = listStyles()\r\n  const [error, loading, response] = useFetch(COVID_WIKI_API, ([response = {}]) => {\r\n    const { query: { pages } } = response\r\n    // 63030231 - id\r\n    const { title = '', extract = '' } = pages[63030231] || {}\r\n    return { title, extract }\r\n  }, {})\r\n\r\n\r\n  useToastCallback(error)\r\n  useChangeDocumentTitle()\r\n  return (\r\n    <PaperContainer justify=\"center\">\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <Typography gutterBottom variant=\"h2\">\r\n            {loading ? <Skeleton variant=\"rect\" height={50} width={400} /> : response.title}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container >\r\n        <Grid item lg>\r\n          <Typography gutterBottom component=\"div\" >\r\n            {loading ? <Skeleton height={200} width='100%' /> : response.extract}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        <Grid item md={5}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            children={loading ? <Skeleton /> : \"List of Covid-19 Symptoms\"}\r\n            gutterBottom />\r\n        </Grid>\r\n      </Grid>\r\n      <List component=\"nav\" aria-label=\"Coronavirus symptons\" className={styles.root}>\r\n        {['Fever', 'Cough', 'Shortness of breath or difficulty breathing', 'Fatigue'\r\n          , 'Headache', 'Diarrhea', 'Sore throat', 'New loss of taste or smell', 'Runny Nose'].map(t =>\r\n            <ListItem button component={Paper} key={t}>\r\n              <ListItemText>\r\n                {loading ? <Skeleton /> : t}\r\n              </ListItemText>\r\n            </ListItem>)}\r\n      </List>\r\n      <Grid container justify=\"center\">\r\n        <Grid item md={5}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            children={loading ? <Skeleton /> : \"Work On Progress here...\"}\r\n            gutterBottom />\r\n        </Grid>\r\n      </Grid>\r\n    </PaperContainer>\r\n  )\r\n}\r\n\r\n\r\nexport default About","import React, { useContext } from 'react'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { ToastProps } from '../helpers/types'\r\nimport { ToastContext } from '../helpers/contexts'\r\nimport { Snackbar, Slide } from '@material-ui/core'\r\n\r\n\r\nconst Toast = ({ type = \"error\", message, open, duration = 5000 }: ToastProps) => {\r\n  const { toggleToast } = useContext(ToastContext)\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      TransitionComponent={Slide}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      autoHideDuration={duration}\r\n      onClose={(_, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        toggleToast({ open: false, message: null })\r\n      }}>\r\n      <Alert variant=\"filled\" severity={type}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\n\r\nexport default Toast","import React, { MouseEventHandler } from 'react'\r\nimport { Align, RowData } from '../../helpers/types'\r\nimport { TableCell, IconButton, Typography } from '@material-ui/core'\r\n\r\nconst CountriesHeadTableCell = (\r\n  { align = \"center\", Icon, label = '', color = '', callback, sortBy, type = 'number' }:\r\n    {\r\n      align?: Align, Icon: React.ElementType, label: string, color?: string,\r\n      callback: (sortOptions: any) => void, sortBy: keyof RowData, type?: 'string' | 'number'\r\n    }) => {\r\n  return (\r\n    <TableCell align={align}>\r\n      <IconButton onClick={() =>\r\n        callback({\r\n          sortBy,\r\n          type\r\n        })}>\r\n        <Icon style={{ fontSize: 30, fill: color }} />\r\n      </IconButton>\r\n      <Typography children={label} variant=\"h6\" style={{ display: 'inline-block', color }} />\r\n    </TableCell>\r\n  )\r\n}\r\n\r\nexport default CountriesHeadTableCell","import React, { useContext } from 'react'\r\nimport WorldTableHeadCell from './CountriesHeadTableCell'\r\nimport { SortContext } from '../../helpers/contexts'\r\nimport { TableHead, TableRow, colors } from '@material-ui/core'\r\nimport { GroupAdd, PersonAddDisabled, PeopleAlt, Language, Report, Healing } from '@material-ui/icons'\r\n\r\n\r\nconst CountriesTableHead = ({ opts }: { opts: any }) => {\r\n  const { sortData } = useContext(SortContext)\r\n  return (<TableHead>\r\n    <TableRow>\r\n      <WorldTableHeadCell\r\n        type=\"string\"\r\n        sortBy=\"country\" callback={sortData} Icon={Language} label=\"Country\" color={colors.brown[500]} />\r\n      <WorldTableHeadCell sortBy=\"cases\" callback={sortData} Icon={PeopleAlt} label=\"Total Cases\" color={colors.yellow[700]} />\r\n      <WorldTableHeadCell sortBy=\"todayCases\" callback={sortData} Icon={GroupAdd} label=\"New Cases\" color={colors.red[500]} />\r\n      <WorldTableHeadCell sortBy=\"deaths\" callback={sortData} Icon={PersonAddDisabled} label=\"Total Deaths\" color={colors.red[400]} />\r\n      <WorldTableHeadCell sortBy=\"recovered\" callback={sortData} Icon={Healing} label=\"Total Recovered\" color={colors.green[500]} />\r\n      <WorldTableHeadCell sortBy=\"active\" callback={sortData} Icon={GroupAdd} label=\"Active Cases\" color={colors.orange[500]} />\r\n      <WorldTableHeadCell sortBy=\"critical\" callback={sortData} Icon={Report} label=\"Critical\" color={colors.red[500]} />\r\n    </TableRow>\r\n  </TableHead>)\r\n}\r\n\r\n\r\nexport default CountriesTableHead","import React from 'react'\r\nimport { Skeleton } from '@material-ui/lab'\r\n\r\nconst ImageFlag = ({ loading, code, width = 320, height = 190, withBorder = false }:\r\n  { loading?: boolean, code?: string, width?: number, height?: number, withBorder?: boolean }) => {\r\n  if (!code && !loading) {\r\n    return <img src='/white-flag.gif' style={{ borderRadius: 3, width }} alt=\"No Flag\" />\r\n  }\r\n\r\n  return (\r\n    loading ? <Skeleton width={width} height={height} variant=\"rect\" style={{ display: 'inline-block' }} />\r\n      : <img src={`https://flagcdn.com/w${width}/${(code as string).toLowerCase()}.png`}\r\n        alt={`Country Flag - ${code}`}\r\n        style={{ borderRadius: 3, border: withBorder ? '.5px solid grey' : '' }} />\r\n  )\r\n}\r\n\r\nexport default ImageFlag","import React, { memo } from 'react'\r\nimport ImageFlag from '../../components/ImageFlag'\r\nimport { History } from 'history'\r\nimport { formatNumber } from '../../helpers'\r\nimport { Align, RowData } from '../../helpers/types'\r\nimport { TableCell, TableRow } from '@material-ui/core'\r\n\r\ninterface WorldTableRowData extends RowData {\r\n  align?: Align,\r\n  history: History\r\n}\r\n\r\nconst CountriesTableRow = memo(({ active, align, cases, todayCases, deaths, recovered, critical, code, country, history }: WorldTableRowData) => {\r\n  return (\r\n    <TableRow hover\r\n      style={{ cursor: 'pointer' }}\r\n      onClick={() => {\r\n        const _country = (country.includes(' ') ? country.split(' ').join('-') : country).toLowerCase()\r\n        history.push(`${process.env.PUBLIC_URL}/countries/${_country}`, { country, code: code?.toLowerCase() })\r\n      }}>\r\n      <TableCell align={align}>\r\n        <ImageFlag width={40} code={code as string} />\r\n        <br />\r\n        {country}\r\n      </TableCell>\r\n      <TableCell align={align}>{formatNumber(cases)}</TableCell>\r\n      <TableCell align={align}>{formatNumber(todayCases)}</TableCell>\r\n      <TableCell align={align}>{formatNumber(deaths)}</TableCell>\r\n      <TableCell align={align}>{formatNumber(recovered)}</TableCell>\r\n      <TableCell align={align}>{formatNumber(active)}</TableCell>\r\n      <TableCell align={align}>{formatNumber(critical)}</TableCell>\r\n    </TableRow>\r\n  )\r\n})\r\n\r\n\r\nexport default CountriesTableRow","import React from 'react'\r\nimport CountriesTableRow from './CountriesTableRow'\r\nimport { TableBody } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Align, RowData } from '../../helpers/types'\r\n\r\nconst CountriesTableBody = ({ data, align = \"center\" }: { data: RowData[], align?: Align }) => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <TableBody>\r\n      {data.map(d =>\r\n        <CountriesTableRow key={d.country} {...d} align={align} history={history} />\r\n      )}\r\n    </TableBody>\r\n  )\r\n\r\n}\r\n\r\nexport default CountriesTableBody","import React from 'react'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { TableRow, TableCell, TableBody } from '@material-ui/core'\r\n\r\nconst TableSkeletonCell = () => {\r\n  return (\r\n    <TableCell>\r\n      <Skeleton height={30} />\r\n    </TableCell>\r\n  )\r\n}\r\n\r\nconst CountriesLoadingRow = ({ rows = 10 }) => {\r\n  return (\r\n    <TableBody>\r\n      {Array(rows).fill(null).map((_, i) =>\r\n        <TableRow key={i}>\r\n          <TableSkeletonCell />\r\n          <TableSkeletonCell />\r\n          <TableSkeletonCell />\r\n          <TableSkeletonCell />\r\n          <TableSkeletonCell />\r\n          <TableSkeletonCell />\r\n          <TableSkeletonCell />\r\n        </TableRow>)}\r\n    </TableBody>\r\n  )\r\n}\r\n\r\nexport default CountriesLoadingRow\r\n\r\n\r\n","import { State } from '../types'\r\nimport { filterCallback, sortCallback } from '..'\r\n\r\nexport const UPDATE_SEARCH = 'UPDATE_SEARCH'\r\nexport const SORT_CASES = 'SORT_CASES'\r\nexport const SET_CASES = 'SET_CASES'\r\n\r\nexport const initialState: State = {\r\n\tcases: [],\r\n\tfilteredAndSortedCases: [],\r\n\tsearchTerm: '',\r\n\toptions: {\r\n\t\torderBy: 'desc', sortBy: 'country'\r\n\t}\r\n}\r\n\r\nexport default (state = initialState, { type, payload }: { type: string, payload?: any }): State => {\r\n\tswitch (type) {\r\n\t\tcase UPDATE_SEARCH:\r\n\t\t\tconst filteredAndSortedCases = filterCallback(payload, state.cases)\r\n\t\t\treturn { ...state, searchTerm: payload, filteredAndSortedCases }\r\n\t\tcase SORT_CASES:\r\n\t\t\tconst order = state.options.orderBy === 'asc' ? 'desc' : 'asc'\r\n\t\t\treturn {\r\n\t\t\t\t...state, options: { orderBy: order, ...payload },\r\n\t\t\t\tfilteredAndSortedCases: sortCallback(state.cases, { ...payload, orderBy: order })\r\n\t\t\t}\r\n\t\tcase SET_CASES:\r\n\t\t\treturn { ...state, cases: payload, filteredAndSortedCases: payload }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import React, { useEffect, useReducer, useCallback } from 'react'\r\nimport CountriesTableHead from './CountriesTableHead'\r\nimport CountriesTableBody from './CountriesTableBody'\r\nimport CountriesLoadingRow from '../../components/CountriesLoadingRow'\r\nimport { MAIN_API } from '../../helpers/config'\r\nimport { SortContext } from '../../helpers/contexts'\r\nimport { SortOption } from '../../helpers/types'\r\nimport { PaperContainer } from '../../containers/PaperContainer'\r\nimport { ModifyResponseCallback } from '../../helpers'\r\nimport { TableContainer, Paper, Table, TextField } from '@material-ui/core'\r\nimport { useFetch, useChangeDocumentTitle, useToastCallback } from '../../helpers/hooks'\r\nimport reducer, { SET_CASES, SORT_CASES, UPDATE_SEARCH, initialState } from '../../helpers/reducers/world'\r\n\r\nconst Countries = () => {\r\n  const [error, loading, response] = useFetch(MAIN_API, ModifyResponseCallback)\r\n  const [{ filteredAndSortedCases, options, searchTerm }, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useChangeDocumentTitle()\r\n  useToastCallback(error)\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      dispatch({ type: UPDATE_SEARCH, payload: searchTerm })\r\n    }, 300)\r\n    return () => clearTimeout(timeout)\r\n  }, [searchTerm])\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_CASES, payload: response })\r\n  }, [loading, response])\r\n\r\n  const sortData = useCallback(({ sortBy, type }: SortOption) => {\r\n    dispatch({\r\n      type: SORT_CASES,\r\n      payload: {\r\n        sortBy, type\r\n      }\r\n    })\r\n  }, [dispatch])\r\n\r\n  const handleSearchChange = useCallback(({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch({ type: UPDATE_SEARCH, payload: value })\r\n  }, [dispatch])\r\n\r\n\r\n\r\n  return <SortContext.Provider value={{ data: filteredAndSortedCases, sortData }}>\r\n    <PaperContainer justify=\"center\">\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Search...\"\r\n        value={searchTerm}\r\n        style={{\r\n          marginBottom: 15\r\n        }}\r\n        onChange={handleSearchChange} />\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <CountriesTableHead opts={options} />\r\n          {\r\n            loading ?\r\n              <CountriesLoadingRow />\r\n              : <CountriesTableBody data={filteredAndSortedCases} />\r\n          }\r\n        </Table>\r\n      </TableContainer>\r\n    </PaperContainer>\r\n  </SortContext.Provider>\r\n}\r\n\r\n\r\nexport default Countries","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core'\r\n\r\nconst ButtonLink = ({ label, to = \"/\" }: { label: string, to: string }) => {\r\n  return (\r\n    <Button color=\"inherit\" component={Link} to={to}>\r\n      {label}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ButtonLink","import React, { useEffect, useState, useContext } from 'react'\r\nimport ButtonLink from './ButtonLink'\r\nimport { ThemeContext } from '../helpers/contexts'\r\nimport { Brightness2Outlined as Moon, WbSunny as Sun } from '@material-ui/icons'\r\nimport { AppBar, Toolbar, Typography, IconButton, colors } from '@material-ui/core'\r\n\r\n\r\nconst Navbar = () => {\r\n  const [themeStyles, setThemeStyles] = useState<any>({})\r\n  const { setTheme, theme } = useContext(ThemeContext)\r\n  const [type, setType] = useState<'dark' | 'light'>('light')\r\n\r\n  useEffect(() => {\r\n    if (type === 'dark') {\r\n      setThemeStyles({ backgroundColor: theme.palette.background.paper })\r\n    } else {\r\n      setThemeStyles({ backgroundColor: theme.palette.primary.main })\r\n    }\r\n  }, [type])\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\" color=\"primary\" style={themeStyles}>\r\n        <Toolbar>\r\n          <Typography children=\"Covid\" variant=\"h6\" style={{ flexGrow: 1 }} />\r\n          <ButtonLink to={process.env.PUBLIC_URL} label=\"World\" />\r\n          <ButtonLink to={`${process.env.PUBLIC_URL}/countries`} label=\"Countries\" />\r\n          <ButtonLink to={`${process.env.PUBLIC_URL}/about`} label=\"About\" />\r\n          <IconButton onClick={() => {\r\n            const newType = type === 'dark' ? 'light' : 'dark'\r\n            setType(newType); setTheme(newType);\r\n          }}>\r\n            {type === 'light' ? <Moon style={{ fill: colors.grey[800] }} /> : <Sun style={{ fill: colors.yellow[200] }} />}\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Navbar","import React from 'react'\r\nimport ImageFlag from './ImageFlag'\r\nimport { capitalize } from '../helpers'\r\nimport { Paper, Typography } from '@material-ui/core'\r\n\r\nconst CountryToolTip = ({ payload, label, active }: { payload: any, label: string, active: boolean }) => {\r\n  if (active) {\r\n    const { dataKey = '', value = '', color = '', payload: p = {} } = payload ? payload[0] : {}\r\n    const { code, country } = p\r\n    return (\r\n      <Paper style={{ padding: 15, textAlign: 'center' }}>\r\n        <Typography variant=\"h5\" children={country} />\r\n        <ImageFlag code={code} width={40} />\r\n        <Typography variant=\"h6\" children={`${capitalize(dataKey)}: ${value}`} style={{ color }} />\r\n        <Typography variant=\"body1\" children={label} />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default CountryToolTip","import React from 'react'\r\nimport ImageFlag from './ImageFlag'\r\nimport { capitalize } from '../helpers'\r\nimport { Paper, Typography } from '@material-ui/core'\r\n\r\nconst CountryToolTipTwo = ({ payload, label, active }: { payload: any, label: string, active: boolean }) => {\r\n  if (active) {\r\n    const [confirmed, deaths, recovered] = payload\r\n    const { dataKey: cKey, value: cVal, stroke: cfColor, color: cColor } = confirmed\r\n    const { dataKey: dKey, value: dVal, stroke: ddColor, color: dColor } = deaths\r\n    const { dataKey: rKey, value: rVal, stroke: rrColor, color: rColor } = recovered\r\n    const { country, code } = confirmed.payload\r\n    return (\r\n      <Paper style={{ padding: 15, textAlign: 'center' }}>\r\n        <Typography variant=\"h5\" children={country} />\r\n        <ImageFlag code={code} width={40} />\r\n        <Typography variant=\"h6\" children={`${capitalize(cKey)}: ${cVal}`} style={{ color: cColor || cfColor }} />\r\n        <Typography variant=\"h6\" children={`${capitalize(dKey)}: ${dVal}`} style={{ color: dColor || ddColor }} />\r\n        <Typography variant=\"h6\" children={`${capitalize(rKey)}: ${rVal}`} style={{ color: rColor || rrColor }} />\r\n        <Typography variant=\"body1\" children={label} />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default CountryToolTipTwo","import React from 'react'\r\nimport CountryToolTip from './CountryToolTip'\r\nimport CountryToolTipTwo from './CountryToolTipTwo'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { ChartProps } from '../helpers/types'\r\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from 'recharts'\r\nimport { chartColors } from './renderChart';\r\n\r\n\r\nconst DataBarChart = ({ loading, data, color, dataKey, dataKeys }: ChartProps) => {\r\n  let bars = null, isMultiple = false\r\n  if (Array.isArray(dataKeys)) {\r\n    isMultiple = true\r\n    bars = dataKeys.map((key, i) => (\r\n      <Bar key={key} dataKey={key} fill={chartColors[i]} />\r\n    ))\r\n  } else {\r\n    bars = <Bar dataKey={dataKey} fill={color} />\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContainer width='99%' height={250} >\r\n      {loading ? <Skeleton height={250} variant=\"rect\" /> :\r\n        <BarChart data={data || []}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis width={100} />\r\n          <Tooltip content={!isMultiple ? CountryToolTip : CountryToolTipTwo} />\r\n          <Legend verticalAlign=\"top\" />\r\n          {bars}\r\n        </BarChart>\r\n      }\r\n    </ResponsiveContainer>)\r\n}\r\n\r\nexport default DataBarChart","import React from 'react'\r\nimport CountryToolTip from './CountryToolTip'\r\nimport CountryToolTipTwo from './CountryToolTipTwo'\r\nimport { ChartProps } from '../helpers/types'\r\nimport { chartColors } from './renderChart'\r\nimport { AreaChart, XAxis, Area, CartesianGrid, Tooltip, YAxis, ResponsiveContainer } from 'recharts'\r\n\r\n\r\nconst DataAreaChart = ({ color, data, dataKey, dataKeys }: ChartProps) => {\r\n  let areas = null, isMultiple = false, gradients = null\r\n  if (Array.isArray(dataKeys)) {\r\n    isMultiple = true\r\n    areas = dataKeys.map((key, i) => (\r\n      <Area key={key} type=\"monotone\" dataKey={key} fill={`url(#${key})`} stroke={chartColors[i]} fillOpacity={1} />\r\n    ))\r\n    gradients = dataKeys.map((key, i) => (\r\n      <linearGradient id={key} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\" key={key}>\r\n        <stop offset=\"5%\" stopColor={chartColors[i]} stopOpacity={0.8} />\r\n        <stop offset=\"95%\" stopColor={chartColors[i]} stopOpacity={0} />\r\n      </linearGradient>\r\n    ))\r\n  } else {\r\n    areas = <Area type=\"monotone\" dataKey={dataKey} stroke={color} fillOpacity={1} fill={`url(#${dataKey})`} />\r\n    gradients = <linearGradient id={dataKey} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n      <stop offset=\"5%\" stopColor={color} stopOpacity={0.8} />\r\n      <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n    </linearGradient>\r\n  }\r\n\r\n  return (<ResponsiveContainer width='99%' height={250}>\r\n    <AreaChart data={data || []}>\r\n      <defs>\r\n        {gradients}\r\n      </defs>\r\n      <XAxis dataKey=\"date\" />\r\n      <YAxis width={100} />\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <Tooltip content={!isMultiple ? CountryToolTip : CountryToolTipTwo} />\r\n      {areas}\r\n    </AreaChart>\r\n  </ResponsiveContainer>)\r\n}\r\n\r\n\r\nexport default DataAreaChart","import React from 'react'\r\nimport CountryToolTip from './CountryToolTip'\r\nimport { ChartProps } from '../helpers/types'\r\nimport { LineChart, XAxis, Line, CartesianGrid, Tooltip, YAxis, ResponsiveContainer, Legend } from 'recharts'\r\nimport { chartColors } from './renderChart'\r\nimport CountryToolTipTwo from './CountryToolTipTwo'\r\n\r\n\r\nconst DataLineChart = ({ data, dataKey, color, dataKeys }: ChartProps) => {\r\n  let lines = null, isMultiple = false\r\n  if (Array.isArray(dataKeys)) {\r\n    isMultiple = true\r\n    lines = dataKeys.map((key, i) => (\r\n      <Line key={key} type=\"monotone\" dataKey={key} fill={chartColors[i]} stroke={chartColors[i]} />\r\n    ))\r\n  } else {\r\n    lines = <Line type=\"monotone\" dataKey={dataKey} fill={color} stroke={color} />\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContainer width='99%' height={250} >\r\n      <LineChart width={730} height={250} data={data} style={{ marginBottom: 15 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <Tooltip content={!isMultiple ? CountryToolTip : CountryToolTipTwo} />\r\n        <Legend verticalAlign=\"top\" />\r\n        {lines}\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  )\r\n}\r\n\r\n\r\nexport default DataLineChart","import React from 'react'\r\nimport DataBarChart from '../components/DataBarChart'\r\nimport DataAreaChart from '../components/DataAreaChart'\r\nimport DataLineChart from '../components/DataLineChart'\r\nimport { colors } from '@material-ui/core'\r\nimport { Chart, CountryData } from '../helpers/types'\r\n\r\nexport const red = colors.red[500]\r\nexport const blue = colors.blue[500]\r\nexport const green = colors.green[500]\r\nexport const chartColors = [blue, red, green]\r\n\r\nconst renderChart = (chartType: Chart, loading: boolean, response: CountryData) => {\r\n\tif (chartType === 'bar') {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DataBarChart loading={loading}\r\n\t\t\t\t\tdataKey=\"deaths\"\r\n\t\t\t\t\tdata={response.deaths} color={red} />\r\n\t\t\t\t<DataBarChart loading={loading}\r\n\t\t\t\t\tdataKey=\"confirmed\"\r\n\t\t\t\t\tdata={response.confirmed} color={blue} />\r\n\t\t\t\t<DataBarChart loading={loading}\r\n\t\t\t\t\tdataKey=\"recovered\"\r\n\t\t\t\t\tdata={response.recovered} color={green} />\r\n\t\t\t\t<DataBarChart loading={loading}\r\n\t\t\t\t\tdataKeys={[\"confirmed\", \"deaths\", \"recovered\"]}\r\n\t\t\t\t\tdataKey=\"\"\r\n\t\t\t\t\tdata={response.all} color={green} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tif (chartType === 'area') {\r\n\t\treturn (<>\r\n\t\t\t<DataAreaChart\r\n\t\t\t\tdataKey=\"deaths\"\r\n\t\t\t\tdata={response.deaths} color={red} />\r\n\t\t\t<DataAreaChart\r\n\t\t\t\tdataKey=\"confirmed\"\r\n\t\t\t\tdata={response.confirmed} color={blue} />\r\n\t\t\t<DataAreaChart\r\n\t\t\t\tdataKey=\"recovered\"\r\n\t\t\t\tdata={response.recovered} color={green} />\r\n\t\t\t<DataAreaChart\r\n\t\t\t\tdataKeys={[\"confirmed\", \"deaths\", \"recovered\"]}\r\n\t\t\t\tdataKey=\"\"\r\n\t\t\t\tdata={response.all} />\r\n\t\t</>)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DataLineChart\r\n\t\t\t\tdataKey=\"deaths\"\r\n\t\t\t\tdata={response.deaths} color={red} />\r\n\t\t\t<DataLineChart\r\n\t\t\t\tdataKey=\"confirmed\"\r\n\t\t\t\tdata={response.confirmed} color={blue} />\r\n\t\t\t<DataLineChart\r\n\t\t\t\tdataKey=\"recovered\"\r\n\t\t\t\tdata={response.recovered} color={green} />\r\n\t\t\t<DataLineChart\r\n\t\t\t\tdataKeys={[\"confirmed\", \"deaths\", \"recovered\"]}\r\n\t\t\t\tdataKey=\"\"\r\n\t\t\t\tdata={response.all} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default renderChart","import React, { useState } from 'react'\r\nimport '../App.css'\r\nimport ImageFlag from '../components/ImageFlag'\r\nimport renderChart from '../components/renderChart'\r\nimport LabelWithIcon from '../components/LabelWithIcon'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { PaperContainer } from '../containers/PaperContainer'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { modifyResponseCountryCB } from '../helpers'\r\nimport { MAIN_API, TIME_SERIES_API } from '../helpers/config'\r\nimport { useFetch, useChangeDocumentTitle, useToastCallback } from '../helpers/hooks'\r\nimport { GroupAdd, PersonAddDisabled, PeopleAlt, Report, Healing } from '@material-ui/icons'\r\nimport { Chart, CountryRouteProps, CountryModifiedResponse } from '../helpers/types'\r\nimport { Grid, Select, MenuItem, FormControl, InputLabel, colors, Typography } from '@material-ui/core'\r\n\r\n\r\nconst Country = ({ location: { state: { country, code } } }: RouteComponentProps<{}, {}, CountryRouteProps>) => {\r\n  const [error, loading, { data, deaths, cases, recovered, active, critical }] = useFetch<CountryModifiedResponse>(\r\n    [TIME_SERIES_API, `${MAIN_API}/${country}`],\r\n    modifyResponseCountryCB({ country, code }), { data: {} })\r\n  const [chart, setChart] = useState<Chart>('bar')\r\n\r\n  useChangeDocumentTitle()\r\n  useToastCallback(error)\r\n\r\n  const handleChartChange = (e: any): void => {\r\n    setChart(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <PaperContainer>\r\n      <Grid container justify=\"center\">\r\n        <Grid item md={4} style={{ textAlign: 'center', marginBottom: 25 }}>\r\n          <Typography variant=\"h2\" gutterBottom>\r\n            {loading ? <Skeleton /> : country}\r\n          </Typography>\r\n          <ImageFlag code={code} loading={loading} withBorder />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\" style={{ marginBottom: 50 }}>\r\n        <LabelWithIcon label=\"Total Cases\" loading={loading} value={cases} color={colors.yellow[700]} Icon={PeopleAlt} />\r\n        <LabelWithIcon label=\"Total Deaths\" loading={loading} value={deaths} color={colors.red[400]} Icon={PersonAddDisabled} />\r\n        <LabelWithIcon label=\"Total Recovered\" loading={loading} value={recovered} color={colors.green[500]} Icon={Healing} />\r\n      </Grid>\r\n      <Grid container justify=\"center\" style={{ marginBottom: 50 }}>\r\n        <LabelWithIcon label=\"Active Cases\" loading={loading} value={active} color={colors.orange[500]} Icon={GroupAdd} />\r\n        <LabelWithIcon label=\"Critical\" loading={loading} value={critical} color={colors.red[500]} Icon={Report} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid container justify=\"center\">\r\n          <FormControl variant=\"outlined\" style={{ minWidth: 250, marginBottom: 15 }}>\r\n            <InputLabel id=\"chart-label\">Choose Chart</InputLabel>\r\n            <Select value={chart} labelId=\"chart-label\" onChange={handleChartChange} label=\"Choose Chart\">\r\n              <MenuItem value=\"bar\">Bar</MenuItem>\r\n              <MenuItem value=\"area\">Area</MenuItem>\r\n              <MenuItem value=\"line\">Line</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          {renderChart(chart, loading, data)}\r\n        </Grid>\r\n      </Grid>\r\n    </PaperContainer  >\r\n  )\r\n}\r\n// For Covid picture\r\n// Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a\r\n// \t\thref=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n\r\nexport default Country","import React from 'react'\r\nimport Main from './pages/Main'\r\nimport About from './pages/About'\r\nimport Toast from './components/Toast'\r\nimport Countries from './pages/Countries/index'\r\nimport Navbar from './components/Navbar'\r\nimport Country from './pages/Country'\r\nimport { ToastProps } from './helpers/types'\r\nimport { ThemeProvider, Theme } from '@material-ui/core'\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\n\r\n\r\nfunction App(props: { theme?: Theme, toastProps?: ToastProps }) {\r\n  return (\r\n    <ThemeProvider theme={props.theme as Theme}>\r\n      <Router>\r\n        <Navbar />\r\n        <Toast {...props.toastProps as ToastProps} />\r\n        <Switch>\r\n          <Route component={Main} path={process.env.PUBLIC_URL} exact />\r\n          <Route component={Country} path={`${process.env.PUBLIC_URL}/countries/:country`} />\r\n          <Route component={Countries} path={`${process.env.PUBLIC_URL}/countries`} />\r\n          <Route component={About} path={`${process.env.PUBLIC_URL}/about`} />\r\n          <Redirect to={process.env.PUBLIC_URL} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport theme, { createTheme } from './theme'\r\nimport { Theme } from '@material-ui/core'\r\nimport { ToastProps } from './helpers/types';\r\nimport { ThemeContext, ToastContext } from './helpers/contexts'\r\n\r\nconst CovidApp = () => {\r\n  const [currentTheme, setTheme] = useState<Theme>(theme)\r\n  const [toastProps, setToastProps] = useState<ToastProps>({ message: null, open: false, type: 'error' })\r\n\r\n  const toggleTheme = (type: 'dark' | 'light') => setTheme(createTheme(type))\r\n\r\n  const toggleToast = (toastProps: ToastProps) => setToastProps(toastProps)\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <ThemeContext.Provider value={{ theme: currentTheme, setTheme: toggleTheme }}>\r\n        <ToastContext.Provider value={{ toastProps, toggleToast }}>\r\n          <App theme={currentTheme} toastProps={toastProps} />\r\n        </ToastContext.Provider>\r\n      </ThemeContext.Provider>\r\n    </React.StrictMode>\r\n  )\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <CovidApp />, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}